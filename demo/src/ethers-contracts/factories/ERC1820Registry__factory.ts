/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ERC1820Registry,
  ERC1820RegistryInterface,
} from "../ERC1820Registry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "interfaceHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "implementer",
        type: "address",
      },
    ],
    name: "InterfaceImplementerSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newManager",
        type: "address",
      },
    ],
    name: "ManagerChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_interfaceHash",
        type: "bytes32",
      },
    ],
    name: "getInterfaceImplementer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_interfaceHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_implementer",
        type: "address",
      },
    ],
    name: "setInterfaceImplementer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_newManager",
        type: "address",
      },
    ],
    name: "setManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "getManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_interfaceName",
        type: "string",
      },
    ],
    name: "interfaceHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "updateERC165Cache",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "implementsERC165Interface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "implementsERC165InterfaceNoCache",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061093d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a41e7d511161005b578063a41e7d5114610106578063aabbb8ca14610119578063b70567651461012c578063f712f3e81461014f57600080fd5b806329965a1d1461008d5780633d584063146100a25780635df8122f146100d257806365ba36c1146100e5575b600080fd5b6100a061009b3660046107ec565b610162565b005b6100b56100b036600461076d565b6103bd565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a06100e036600461078f565b610406565b6100f86100f3366004610885565b6104da565b6040519081526020016100c9565b6100a0610114366004610828565b61050e565b6100b56101273660046107c2565b61058b565b61013f61013a366004610828565b610602565b60405190151581526020016100c9565b61013f61015d366004610828565b6106a4565b60006001600160a01b03841615610179578361017b565b335b905033610187826103bd565b6001600160a01b0316146101d45760405162461bcd60e51b815260206004820152600f60248201526e2737ba103a34329036b0b730b3b2b960891b60448201526064015b60405180910390fd5b6001600160e01b03831661022a5760405162461bcd60e51b815260206004820152601a60248201527f4d757374206e6f7420626520616e20455243313635206861736800000000000060448201526064016101cb565b6001600160a01b0382161580159061024b57506001600160a01b0382163314155b156103595760405173455243313832305f4143434550545f4d4147494360601b602082015260340160408051601f1981840301815290829052805160209091012063124e59fd60e11b8252600482018590526001600160a01b03838116602484015290919084169063249cb3fa9060440160206040518083038186803b1580156102d457600080fd5b505afa1580156102e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030c919061086c565b146103595760405162461bcd60e51b815260206004820181905260248201527f446f6573206e6f7420696d706c656d656e742074686520696e7465726661636560448201526064016101cb565b6001600160a01b0381811660008181526020818152604080832088845290915280822080546001600160a01b0319169487169485179055518692917f93baa6efbd2244243bfee6ce4cfdd1d04fc4c0e9a786abd3a41313bd352db15391a450505050565b6001600160a01b038181166000908152600160205260408120549091166103e2575090565b506001600160a01b039081166000908152600160205260409020541690565b919050565b33610410836103bd565b6001600160a01b0316146104585760405162461bcd60e51b815260206004820152600f60248201526e2737ba103a34329036b0b730b3b2b960891b60448201526064016101cb565b816001600160a01b0316816001600160a01b031614610477578061047a565b60005b6001600160a01b0383811660008181526001602052604080822080546001600160a01b0319169585169590951790945592519184169290917f605c2dbf762e5f7d60a546d42e7205dcb1b011ebc62a61736a57c9089d3a43509190a35050565b600082826040516020016104ef9291906108f7565b6040516020818303038152906040528051906020012090505b92915050565b6105188282610602565b610523576000610525565b815b6001600160a01b039283166000818152602081815260408083206001600160e01b03199690961680845295825280832080546001600160a01b0319169590971694909417909555908152600284528181209281529190925220805460ff19166001179055565b6000806001600160a01b038416156105a357836105a5565b335b90506001600160e01b0383166105d657826105c082826106a4565b6105cb5760006105cd565b815b92505050610508565b6001600160a01b0390811660009081526020818152604080832086845290915290205416905092915050565b60008080610617856301ffc9a760e01b610722565b9092509050811580610627575080155b1561063757600092505050610508565b610649856001600160e01b0319610722565b909250905081158061065a57508015155b1561066a57600092505050610508565b6106748585610722565b90925090506001821480156106895750806001145b1561069957600192505050610508565b506000949350505050565b6001600160a01b03821660009081526002602090815260408083206001600160e01b03198516845290915281205460ff166106ea576106e38383610602565b9050610508565b506001600160a01b038083166000818152602081815260408083206001600160e01b0319871684529091529020549091161492915050565b6040516301ffc9a760e01b8082526004820183905260009182919060208160248189617530fa905190969095509350505050565b80356001600160a01b038116811461040157600080fd5b60006020828403121561077f57600080fd5b61078882610756565b9392505050565b600080604083850312156107a257600080fd5b6107ab83610756565b91506107b960208401610756565b90509250929050565b600080604083850312156107d557600080fd5b6107de83610756565b946020939093013593505050565b60008060006060848603121561080157600080fd5b61080a84610756565b92506020840135915061081f60408501610756565b90509250925092565b6000806040838503121561083b57600080fd5b61084483610756565b915060208301356001600160e01b03198116811461086157600080fd5b809150509250929050565b60006020828403121561087e57600080fd5b5051919050565b6000806020838503121561089857600080fd5b823567ffffffffffffffff808211156108b057600080fd5b818501915085601f8301126108c457600080fd5b8135818111156108d357600080fd5b8660208285010111156108e557600080fd5b60209290920196919550909350505050565b818382376000910190815291905056fea2646970667358221220f83042a98f20358b532d0010a988697fa47507c069b12558b0e8fbc7a65d503164736f6c63430008070033";

type ERC1820RegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1820RegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1820Registry__factory extends ContractFactory {
  constructor(...args: ERC1820RegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1820Registry> {
    return super.deploy(overrides || {}) as Promise<ERC1820Registry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1820Registry {
    return super.attach(address) as ERC1820Registry;
  }
  override connect(signer: Signer): ERC1820Registry__factory {
    return super.connect(signer) as ERC1820Registry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1820RegistryInterface {
    return new utils.Interface(_abi) as ERC1820RegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1820Registry {
    return new Contract(address, _abi, signerOrProvider) as ERC1820Registry;
  }
}
