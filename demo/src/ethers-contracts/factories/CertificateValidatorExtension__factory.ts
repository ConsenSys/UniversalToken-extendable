/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  CertificateValidatorExtension,
  CertificateValidatorExtensionInterface,
} from "../CertificateValidatorExtension";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "CertificateSignerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "CertificateSignerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "roleId",
        type: "bytes32",
      },
    ],
    name: "RoleAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "roleId",
        type: "bytes32",
      },
    ],
    name: "RoleRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "extensionDeployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "externalFunctions",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "roleId",
        type: "bytes32",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "interfaceLabel",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TokenStandard",
        name: "standard",
        type: "uint8",
      },
    ],
    name: "isTokenStandardSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "packageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requiredRoles",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isCertificateSigner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addCertificateSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeCertificateSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "usedCertificateNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "usedCertificateSalt",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getValidationMode",
    outputs: [
      {
        internalType: "enum CertificateValidationType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum CertificateValidationType",
        name: "mode",
        type: "uint8",
      },
    ],
    name: "setValidationMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "partition",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "operator",
            type: "address",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "operatorData",
            type: "bytes",
          },
        ],
        internalType: "struct TransferData",
        name: "data",
        type: "tuple",
      },
    ],
    name: "onTransferExecuted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50603780546001600160a01b031916331790556200002e620001b2565b6200004063e6ff089560e01b620001f0565b62000052630106885960e71b620001f0565b620000646305dfc15b60e41b620001f0565b60408051808201909152601c81527f697343657274696669636174655369676e6572286164647265737329000000006020820152620000a390620002ab565b60408051808201909152601d81527f7573656443657274696669636174654e6f6e63652861646472657373290000006020820152620000e290620002ab565b60408051808201909152601c81527f75736564436572746966696361746553616c742862797465733332290000000060208201526200012190620002ab565b60408051808201909152601381527f67657456616c69646174696f6e4d6f646528290000000000000000000000000060208201526200016090620002ab565b62000172630c50238360e31b620002e7565b6200017c62000363565b620001a060405180606001604052806034815260200162001f076034913962000395565b620001ac60016200040c565b62000709565b603754604051620001d3916001600160a01b031690603990602001620005b6565b60408051601f198184030181529190528051602090910120603a55565b303b156200024b5760405162461bcd60e51b815260206004820152602e602482015260008051602062001f3b83398151915260448201526d34329031b7b739ba393ab1ba37b960911b60648201526084015b60405180910390fd5b603480546001810182556000919091527f46bddb1178e94d7f2892ff5f366840eb658911794f2c3a44c450aa2c505186c16008820401805463ffffffff60079093166004026101000a928302191660e09390931c91909102919091179055565b620002e481604051602001620002c2919062000678565b60405160208183030381529060405280519060200120620001f060201b60201c565b50565b303b156200033e5760405162461bcd60e51b815260206004820152602e602482015260008051602062001f3b83398151915260448201526d34329031b7b739ba393ab1ba37b960911b606482015260840162000242565b6001600160e01b0319166000908152603560205260409020805460ff19166001179055565b6200036f600062000468565b6200037b600162000468565b62000387600262000468565b62000393600362000468565b565b303b15620003ec5760405162461bcd60e51b815260206004820152602e602482015260008051602062001f3b83398151915260448201526d34329031b7b739ba393ab1ba37b960911b606482015260840162000242565b80516200040190603990602084019062000510565b50620002e4620001b2565b303b15620004635760405162461bcd60e51b815260206004820152602e602482015260008051602062001f3b83398151915260448201526d34329031b7b739ba393ab1ba37b960911b606482015260840162000242565b603855565b303b15620004bf5760405162461bcd60e51b815260206004820152602e602482015260008051602062001f3b83398151915260448201526d34329031b7b739ba393ab1ba37b960911b606482015260840162000242565b600160336000836003811115620004da57620004da620006f3565b6003811115620004ee57620004ee620006f3565b81526020810191909152604001600020805460ff191691151591909117905550565b8280546200051e90620006b6565b90600052602060002090601f0160209004810192826200054257600085556200058d565b82601f106200055d57805160ff19168380011785556200058d565b828001600101855582156200058d579182015b828111156200058d57825182559160200191906001019062000570565b506200059b9291506200059f565b5090565b5b808211156200059b5760008155600101620005a0565b606083901b6001600160601b031916815281546000906014908290600181811c9082811680620005e757607f831692505b60208084108214156200060857634e487b7160e01b86526022600452602486fd5b8180156200061f5760018114620006355762000668565b60ff1986168a890152848a018801965062000668565b60008b81526020902060005b868110156200065e5781548c82018b015290850190830162000641565b505087858b010196505b50949a9950505050505050505050565b6000825160005b818110156200069b57602081860181015185830152016200067f565b81811115620006ab576000828501525b509190910192915050565b600181811c90821680620006cb57607f821691505b60208210811415620006ed57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b6117ee80620007196000396000f3fe6080604052600436106101025760003560e01c806383442c8011610095578063ac4ab3fb11610064578063ac4ab3fb146102b9578063c6ba1b57146102d9578063cd28fc8f146102f9578063e6ff08951461031b578063fe9ec0c11461033b57600080fd5b806383442c8014610237578063866d2871146102575780639862b05b14610277578063a75a245a1461029757600080fd5b806355414b2c116100d157806355414b2c146101915780635dfc15b0146101c1578063697b160b146101e35780638129fc1c1461022257600080fd5b806334328ef61461010e57806335d94527146101325780633e2a50eb1461015457806354fd4d501461017c57600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b50603a545b6040519081526020015b60405180910390f35b34801561013e57600080fd5b5061014761035b565b60405161012991906115e8565b34801561016057600080fd5b506037546040516001600160a01b039091168152602001610129565b34801561018857600080fd5b5060385461011f565b34801561019d57600080fd5b506101b16101ac366004611356565b6103ed565b6040519015158152602001610129565b3480156101cd57600080fd5b506101e16101dc366004611388565b610425565b005b3480156101ef57600080fd5b507f9c6bac2b0acbea544ce547f4de7bd3db0e574c89b05756aa413ad59929e780655460ff1660405161012991906115c0565b34801561022e57600080fd5b506101e16104af565b34801561024357600080fd5b506101e1610252366004611311565b6104de565b34801561026357600080fd5b506101b16102723660046113a9565b610520565b34801561028357600080fd5b5061011f610292366004611311565b610563565b3480156102a357600080fd5b506102ac6105a0565b604051610129919061157e565b3480156102c557600080fd5b506101b16102d436600461132c565b610624565b3480156102e557600080fd5b506101b16102f43660046113ca565b610639565b34801561030557600080fd5b5061030e6108e8565b604051610129919061153a565b34801561032757600080fd5b506101e1610336366004611311565b61093f565b34801561034757600080fd5b506101b1610356366004611311565b61097e565b6060603b805461036a90611700565b80601f016020809104026020016040519081016040528092919081815260200182805461039690611700565b80156103e35780601f106103b8576101008083540402835291602001916103e3565b820191906000526020600020905b8154815290600101906020018083116103c657829003601f168201915b5050505050905090565b60008181527f9c6bac2b0acbea544ce547f4de7bd3db0e574c89b05756aa413ad59929e78064602052604081205460ff165b92915050565b610444610430610998565b600080516020611799833981519152610624565b6104695760405162461bcd60e51b81526004016104609061161b565b60405180910390fd5b7f9c6bac2b0acbea544ce547f4de7bd3db0e574c89b05756aa413ad59929e78065805482919060ff191660018360028111156104a7576104a761176c565b021790555050565b6104ce6104ba610998565b6000805160206117998339815191526109eb565b6104dc3063c6ba1b57610a2f565b565b6104e9610430610998565b6105055760405162461bcd60e51b81526004016104609061161b565b61051d81600080516020611799833981519152610af9565b50565b6000603360008360038111156105385761053861176c565b60038111156105495761054961176c565b815260208101919091526040016000205460ff1692915050565b6001600160a01b03811660009081527f9c6bac2b0acbea544ce547f4de7bd3db0e574c89b05756aa413ad59929e78063602052604081205461041f565b606060348054806020026020016040519081016040528092919081815260200182805480156103e357602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116105dd5790505050505050905090565b600061063283835b90610b3d565b9392505050565b600061066c7f66ad66e3451c55c1997c7b22154c2a8caa66dbcc3a201482e1fc5e25434dd133546001600160a01b031690565b6001600160a01b0316336001600160a01b0316146106c25760405162461bcd60e51b8152602060048201526013602482015272151bdad95b8e88155b985d5d1a1bdc9a5e9959606a1b6044820152606401610460565b6000826101000151511161070f5760405162461bcd60e51b8152602060048201526014602482015273446174612063616e6e6f7420626520656d70747960601b6044820152606401610460565b7f9c6bac2b0acbea544ce547f4de7bd3db0e574c89b05756aa413ad59929e780655460ff1660008160028111156107485761074861176c565b116107955760405162461bcd60e51b815260206004820152601760248201527f56616c69646174696f6e206d6f6465206e6f74207365740000000000000000006044820152606401610460565b600060018260028111156107ab576107ab61176c565b1415610822576107ce846000015185606001518660200151876101000151610bc0565b60608501516001600160a01b031660009081527f9c6bac2b0acbea544ce547f4de7bd3db0e574c89b05756aa413ad59929e78063602052604081208054929350906108188361173b565b9190505550610897565b60028260028111156108365761083661176c565b141561089757600061085b856000015186606001518760200151886101000151610dee565b60009081527f9c6bac2b0acbea544ce547f4de7bd3db0e574c89b05756aa413ad59929e7806460205260409020805460ff191660011790559150505b806108dc5760405162461bcd60e51b815260206004820152601560248201527410d95c9d1a599a58d85d19481b9bdd081d985b1a59605a1b6044820152606401610460565b6001925050505b919050565b606060368054806020026020016040519081016040528092919081815260200182805480156103e357602002820191906000526020600020905b815481526020019060010190808311610922575050505050905090565b61094a610430610998565b6109665760405162461bcd60e51b81526004016104609061161b565b61051d816000805160206117998339815191526109eb565b600061041f82600080516020611799833981519152610624565b6000601836108015906109d457507f66ad66e3451c55c1997c7b22154c2a8caa66dbcc3a201482e1fc5e25434dd135546001600160a01b031633145b156109e6575060131936013560601c90565b503390565b6109f58183611048565b60405181906001600160a01b038416907faa695d83684b95e18fda4eda7e1794787e74fbc90097a9582f5c41989687883e90600090a35050565b6000610a627f66ad66e3451c55c1997c7b22154c2a8caa66dbcc3a201482e1fc5e25434dd133546001600160a01b031690565b604080516303d18fed60e51b81527fffa12f3235609338cae9786d834825f13134ceb8cead17698174270813895eac600482015263ffffffff8516602087901b1790911b60248201529091506001600160a01b03821690637a31fda090604401600060405180830381600087803b158015610adc57600080fd5b505af1158015610af0573d6000803e3d6000fd5b50505050505050565b610b0381836110c4565b60405181906001600160a01b038416907f47808f9766351846ab3f47ddfd0cfc00fd1a4831674f2c872826932b0184d0be90600090a35050565b60006001600160a01b038216610ba05760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b6064820152608401610460565b506001600160a01b03166000908152602091909152604090205460ff1690565b60008151606114610bd357506000610de6565b6020820151608083015160001a42821015610bf357600092505050610de6565b601b8160ff161015610c0d57610c0a601b82611694565b90505b8060ff16601b1480610c2257508060ff16601c145b15610ddf576000610c44600086518851610c3c91906116b9565b889190611146565b90506000878983867f9c6bac2b0acbea544ce547f4de7bd3db0e574c89b05756aa413ad59929e780636001600160a01b038d1660009081526020918252604090819020549051610c989695949392016114e8565b60405160208183030381529060405290506000896001600160a01b031663a8082cb06040518163ffffffff1660e01b815260040160206040518083038186803b158015610ce457600080fd5b505afa158015610cf8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1c919061136f565b8280519060200120604051602001610d3e929190918252602082015260400190565b60408051601f1981840301815282825280516020918201208a8301516060808d01516000875293860180865283905260ff8a16948601949094529284018390526080840182905293509091610dc49060019060a0016020604051602081039080840390855afa158015610db5573d6000803e3d6000fd5b50505060206040510351611253565b15610dd9576001975050505050505050610de6565b50505050505b6000925050505b949350505050565b6000808251608114610e055750600090508061103f565b6020830151604084015160a085015160001a42821015610e2e576000809450945050505061103f565b601b8160ff161015610e4857610e45601b82611694565b90505b8060ff16601b1480610e5d57508060ff16601c145b15611034576000610e7f600088518a51610e7791906116b9565b8a9190611146565b90506000898b838688604051602001610e9c9594939291906114e8565b60405160208183030381529060405280519060200120905060008b6001600160a01b031663a8082cb06040518163ffffffff1660e01b815260040160206040518083038186803b158015610eef57600080fd5b505afa158015610f03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f27919061136f565b604080516020810192909252810183905260600160405160208183030381529060405280519060200120905060008060608b0151915060808b01519050600060018488858560405160008152602001604052604051610fa2949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015610fc4573d6000803e3d6000fd5b505050602060405103519050610fd981611253565b8015611013575060008981527f9c6bac2b0acbea544ce547f4de7bd3db0e574c89b05756aa413ad59929e78064602052604090205460ff16155b1561102d576001899a509a5050505050505050505061103f565b5050505050505b600080945094505050505b94509492505050565b6110528282610b3d565b1561109f5760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c65006044820152606401610460565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6110ce8282610b3d565b6111245760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b6064820152608401610460565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b60608161115481601f61167c565b10156111935760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401610460565b61119d828461167c565b845110156111e15760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606401610460565b606082158015611200576040519150600082526020820160405261124a565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611239578051835260209283019201611221565b5050858452601f01601f1916604052505b50949350505050565b600061041f8260008051602061179983398151915261062c565b80356001600160a01b03811681146108e357600080fd5b600082601f83011261129557600080fd5b813567ffffffffffffffff808211156112b0576112b0611782565b604051601f8301601f19908116603f011681019082821181831017156112d8576112d8611782565b816040528381528660208588010111156112f157600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561132357600080fd5b6106328261126d565b6000806040838503121561133f57600080fd5b6113488361126d565b946020939093013593505050565b60006020828403121561136857600080fd5b5035919050565b60006020828403121561138157600080fd5b5051919050565b60006020828403121561139a57600080fd5b81356003811061063257600080fd5b6000602082840312156113bb57600080fd5b81356004811061063257600080fd5b6000602082840312156113dc57600080fd5b813567ffffffffffffffff808211156113f457600080fd5b90830190610140828603121561140957600080fd5b611411611652565b61141a8361126d565b815260208301358281111561142e57600080fd5b61143a87828601611284565b602083015250604083013560408201526114566060840161126d565b60608201526114676080840161126d565b608082015261147860a0840161126d565b60a082015260c083013560c082015260e083013560e082015261010080840135838111156114a557600080fd5b6114b188828701611284565b82840152505061012080840135838111156114cb57600080fd5b6114d788828701611284565b918301919091525095945050505050565b60006bffffffffffffffffffffffff19808860601b168352808760601b16601484015250845161151f8160288501602089016116d0565b90910160288101939093525060488201526068019392505050565b6020808252825182820181905260009190848201906040850190845b8181101561157257835183529284019291840191600101611556565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156115725783516001600160e01b0319168352928401929184019160010161159a565b60208101600383106115e257634e487b7160e01b600052602160045260246000fd5b91905290565b60208152600082518060208401526116078160408501602087016116d0565b601f01601f19169190910160400192915050565b60208082526018908201527f4f6e6c79206365727469666963617465207369676e6572730000000000000000604082015260600190565b604051610140810167ffffffffffffffff8111828210171561167657611676611782565b60405290565b6000821982111561168f5761168f611756565b500190565b600060ff821660ff84168060ff038211156116b1576116b1611756565b019392505050565b6000828210156116cb576116cb611756565b500390565b60005b838110156116eb5781810151838201526020016116d3565b838111156116fa576000848401525b50505050565b600181811c9082168061171457607f821691505b6020821081141561173557634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561174f5761174f611756565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fdfeb2cc3fa82187b8c25d2abf186e71cfbb26baf59b3ae5a6c2ab310cde2a2472a6a2646970667358221220744508ec48b9dec6051c481d0ec0b46df1f4167277931c20bf00a033575e8d7064736f6c634300080700336e65742e636f6e73656e7379732e746f6b656e6578742e436572746966696361746556616c696461746f72457874656e73696f6e46756e6374696f6e206d7573742062652063616c6c656420696e736964652074";

type CertificateValidatorExtensionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CertificateValidatorExtensionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CertificateValidatorExtension__factory extends ContractFactory {
  constructor(...args: CertificateValidatorExtensionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CertificateValidatorExtension> {
    return super.deploy(
      overrides || {}
    ) as Promise<CertificateValidatorExtension>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CertificateValidatorExtension {
    return super.attach(address) as CertificateValidatorExtension;
  }
  override connect(signer: Signer): CertificateValidatorExtension__factory {
    return super.connect(signer) as CertificateValidatorExtension__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CertificateValidatorExtensionInterface {
    return new utils.Interface(_abi) as CertificateValidatorExtensionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CertificateValidatorExtension {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CertificateValidatorExtension;
  }
}
