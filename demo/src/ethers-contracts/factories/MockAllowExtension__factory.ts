/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  MockAllowExtension,
  MockAllowExtensionInterface,
} from "../MockAllowExtension";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AllowlistedAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AllowlistedAdminAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AllowlistedAdminRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AllowlistedRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "roleId",
        type: "bytes32",
      },
    ],
    name: "RoleAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "roleId",
        type: "bytes32",
      },
    ],
    name: "RoleRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addAllowlisted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addAllowlistedAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "extensionDeployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "externalFunctions",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "roleId",
        type: "bytes32",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "interfaceLabel",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isAllowlisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isAllowlistedAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TokenStandard",
        name: "standard",
        type: "uint8",
      },
    ],
    name: "isTokenStandardSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "partition",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "operator",
            type: "address",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "operatorData",
            type: "bytes",
          },
        ],
        internalType: "struct TransferData",
        name: "data",
        type: "tuple",
      },
    ],
    name: "onTransferExecuted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "packageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeAllowlisted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeAllowlistedAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requiredRoles",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
  {
    inputs: [],
    name: "mockUpgradeTest",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50603780546001600160a01b031916331790556200002e62000176565b62000040630b41de7160e21b620001b4565b6200005263682fb23760e11b620001b4565b62000064634b744bff60e11b620001b4565b6200007663d29dd47d60e01b620001b4565b60408051808201909152601681527f6973416c6c6f776c6973746564286164647265737329000000000000000000006020820152620000b5906200026f565b60408051808201909152601b81527f6973416c6c6f776c697374656441646d696e28616464726573732900000000006020820152620000f4906200026f565b6200010663f8fba5a360e01b620002ab565b620001186363aa13c560e01b620002ab565b6200012262000327565b62000146604051806060016040528060258152602001620016d86025913962000359565b620001526001620003d0565b6200016463378e0df560e01b620001b4565b620001706002620003d0565b620006cd565b60375460405162000197916001600160a01b0316906039906020016200057a565b60408051601f198184030181529190528051602090910120603a55565b303b156200020f5760405162461bcd60e51b815260206004820152602e6024820152600080516020620016b883398151915260448201526d34329031b7b739ba393ab1ba37b960911b60648201526084015b60405180910390fd5b603480546001810182556000919091527f46bddb1178e94d7f2892ff5f366840eb658911794f2c3a44c450aa2c505186c16008820401805463ffffffff60079093166004026101000a928302191660e09390931c91909102919091179055565b620002a8816040516020016200028691906200063c565b60405160208183030381529060405280519060200120620001b460201b60201c565b50565b303b15620003025760405162461bcd60e51b815260206004820152602e6024820152600080516020620016b883398151915260448201526d34329031b7b739ba393ab1ba37b960911b606482015260840162000206565b6001600160e01b0319166000908152603560205260409020805460ff19166001179055565b6200033360006200042c565b6200033f60016200042c565b6200034b60026200042c565b6200035760036200042c565b565b303b15620003b05760405162461bcd60e51b815260206004820152602e6024820152600080516020620016b883398151915260448201526d34329031b7b739ba393ab1ba37b960911b606482015260840162000206565b8051620003c5906039906020840190620004d4565b50620002a862000176565b303b15620004275760405162461bcd60e51b815260206004820152602e6024820152600080516020620016b883398151915260448201526d34329031b7b739ba393ab1ba37b960911b606482015260840162000206565b603855565b303b15620004835760405162461bcd60e51b815260206004820152602e6024820152600080516020620016b883398151915260448201526d34329031b7b739ba393ab1ba37b960911b606482015260840162000206565b6001603360008360038111156200049e576200049e620006b7565b6003811115620004b257620004b2620006b7565b81526020810191909152604001600020805460ff191691151591909117905550565b828054620004e2906200067a565b90600052602060002090601f01602090048101928262000506576000855562000551565b82601f106200052157805160ff191683800117855562000551565b8280016001018555821562000551579182015b828111156200055157825182559160200191906001019062000534565b506200055f92915062000563565b5090565b5b808211156200055f576000815560010162000564565b606083901b6001600160601b031916815281546000906014908290600181811c9082811680620005ab57607f831692505b6020808410821415620005cc57634e487b7160e01b86526022600452602486fd5b818015620005e35760018114620005f9576200062c565b60ff1986168a890152848a01880196506200062c565b60008b81526020902060005b86811015620006225781548c82018b015290850190830162000605565b505087858b010196505b50949a9950505050505050505050565b6000825160005b818110156200065f576020818601810151858301520162000643565b818111156200066f576000828501525b509190910192915050565b600181811c908216806200068f57607f821691505b60208210811415620006b157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b610fdb80620006dd6000396000f3fe6080604052600436106101025760003560e01c80638129fc1c11610095578063ac4ab3fb11610064578063ac4ab3fb1461028f578063c6ba1b57146102af578063cd28fc8f146102cf578063d05f646e146102f1578063d29dd47d1461031157600080fd5b80638129fc1c14610218578063866d28711461022d57806396e897fe1461024d578063a75a245a1461026d57600080fd5b806335d94527116100d157806335d94527146101a4578063378e0df5146101c65780633e2a50eb146101db57806354fd4d501461020357600080fd5b806305a3b8091461010e57806327df5046146101435780632d0779c41461016357806334328ef61461018557600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b5061012e610129366004610c3e565b610331565b60405190151581526020015b60405180910390f35b34801561014f57600080fd5b5061012e61015e366004610c3e565b610351565b34801561016f57600080fd5b5061018361017e366004610c3e565b61036b565b005b34801561019157600080fd5b50603a545b60405190815260200161013a565b3480156101b057600080fd5b506101b96103ca565b60405161013a9190610e48565b3480156101d257600080fd5b506101b961045c565b3480156101e757600080fd5b506037546040516001600160a01b03909116815260200161013a565b34801561020f57600080fd5b50603854610196565b34801561022457600080fd5b506101836104b3565b34801561023957600080fd5b5061012e610248366004610c83565b6104e2565b34801561025957600080fd5b50610183610268366004610c3e565b610525565b34801561027957600080fd5b50610282610564565b60405161013a9190610e06565b34801561029b57600080fd5b5061012e6102aa366004610c59565b6105e8565b3480156102bb57600080fd5b5061012e6102ca366004610ca4565b6105fb565b3480156102db57600080fd5b506102e461079f565b60405161013a9190610dc2565b3480156102fd57600080fd5b5061018361030c366004610c3e565b6107f6565b34801561031d57600080fd5b5061018361032c366004610c3e565b610835565b600061034b82600080516020610f668339815191526105e8565b92915050565b600061034b82600080516020610f868339815191526105e8565b61038a610376610874565b600080516020610f868339815191526105e8565b6103af5760405162461bcd60e51b81526004016103a690610e9d565b60405180910390fd5b6103c781600080516020610f668339815191526108c7565b50565b6060603b80546103d990610efe565b80601f016020809104026020016040519081016040528092919081815260200182805461040590610efe565b80156104525780601f1061042757610100808354040283529160200191610452565b820191906000526020600020905b81548152906001019060200180831161043557829003601f168201915b5050505050905090565b6060610469610376610874565b6104855760405162461bcd60e51b81526004016103a690610e9d565b50604080518082019091526013815272151a1a5cc81d5c19dc985919481ddbdc9ad959606a1b602082015290565b6104d26104be610874565b600080516020610f868339815191526108c7565b6104e03063c6ba1b5761090b565b565b6000603360008360038111156104fa576104fa610f39565b600381111561050b5761050b610f39565b815260208101919091526040016000205460ff1692915050565b610530610376610874565b61054c5760405162461bcd60e51b81526004016103a690610e9d565b6103c781600080516020610f868339815191526108c7565b6060603480548060200260200160405190810160405280929190818152602001828054801561045257602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116105a15790505050505050905090565b60006105f482846109d5565b9392505050565b600061062e7f66ad66e3451c55c1997c7b22154c2a8caa66dbcc3a201482e1fc5e25434dd133546001600160a01b031690565b6001600160a01b0316336001600160a01b0316146106845760405162461bcd60e51b8152602060048201526013602482015272151bdad95b8e88155b985d5d1a1bdc9a5e9959606a1b60448201526064016103a6565b60808201516000906001600160a01b031615806106b857506106b88360800151600080516020610f668339815191526105e8565b60a08401519091506000906001600160a01b031615806106ef57506106ef8460a00151600080516020610f668339815191526105e8565b90508161073e5760405162461bcd60e51b815260206004820152601f60248201527f66726f6d2061646472657373206973206e6f7420616c6c6f776c69737465640060448201526064016103a6565b8061078b5760405162461bcd60e51b815260206004820152601d60248201527f746f2061646472657373206973206e6f7420616c6c6f776c697374656400000060448201526064016103a6565b8180156107955750805b925050505b919050565b6060603680548060200260200160405190810160405280929190818152602001828054801561045257602002820191906000526020600020905b8154815260200190600101908083116107d9575050505050905090565b610801610376610874565b61081d5760405162461bcd60e51b81526004016103a690610e9d565b6103c781600080516020610f66833981519152610a58565b610840610376610874565b61085c5760405162461bcd60e51b81526004016103a690610e9d565b6103c781600080516020610f86833981519152610a58565b6000601836108015906108b057507f66ad66e3451c55c1997c7b22154c2a8caa66dbcc3a201482e1fc5e25434dd135546001600160a01b031633145b156108c2575060131936013560601c90565b503390565b6108d18183610a9c565b60405181906001600160a01b038416907faa695d83684b95e18fda4eda7e1794787e74fbc90097a9582f5c41989687883e90600090a35050565b600061093e7f66ad66e3451c55c1997c7b22154c2a8caa66dbcc3a201482e1fc5e25434dd133546001600160a01b031690565b604080516303d18fed60e51b81527fffa12f3235609338cae9786d834825f13134ceb8cead17698174270813895eac600482015263ffffffff8516602087901b1790911b60248201529091506001600160a01b03821690637a31fda090604401600060405180830381600087803b1580156109b857600080fd5b505af11580156109cc573d6000803e3d6000fd5b50505050505050565b60006001600160a01b038216610a385760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b60648201526084016103a6565b506001600160a01b03166000908152602091909152604090205460ff1690565b610a628183610b18565b60405181906001600160a01b038416907f47808f9766351846ab3f47ddfd0cfc00fd1a4831674f2c872826932b0184d0be90600090a35050565b610aa682826109d5565b15610af35760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650060448201526064016103a6565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b610b2282826109d5565b610b785760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b60648201526084016103a6565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b80356001600160a01b038116811461079a57600080fd5b600082601f830112610bc257600080fd5b813567ffffffffffffffff80821115610bdd57610bdd610f4f565b604051601f8301601f19908116603f01168101908282118183101715610c0557610c05610f4f565b81604052838152866020858801011115610c1e57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215610c5057600080fd5b6105f482610b9a565b60008060408385031215610c6c57600080fd5b610c7583610b9a565b946020939093013593505050565b600060208284031215610c9557600080fd5b8135600481106105f457600080fd5b600060208284031215610cb657600080fd5b813567ffffffffffffffff80821115610cce57600080fd5b908301906101408286031215610ce357600080fd5b610ceb610ed4565b610cf483610b9a565b8152602083013582811115610d0857600080fd5b610d1487828601610bb1565b60208301525060408301356040820152610d3060608401610b9a565b6060820152610d4160808401610b9a565b6080820152610d5260a08401610b9a565b60a082015260c083013560c082015260e083013560e08201526101008084013583811115610d7f57600080fd5b610d8b88828701610bb1565b8284015250506101208084013583811115610da557600080fd5b610db188828701610bb1565b918301919091525095945050505050565b6020808252825182820181905260009190848201906040850190845b81811015610dfa57835183529284019291840191600101610dde565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015610dfa5783516001600160e01b03191683529284019291840191600101610e22565b600060208083528351808285015260005b81811015610e7557858101830151858201604001528201610e59565b81811115610e87576000604083870101525b50601f01601f1916929092016040019392505050565b60208082526017908201527f4e6f7420616e20616c6c6f77206c6973742061646d696e000000000000000000604082015260600190565b604051610140810167ffffffffffffffff81118282101715610ef857610ef8610f4f565b60405290565b600181811c90821680610f1257607f821691505b60208210811415610f3357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fdfe6b95424c74b5189257615546fcf8a916982dfd76093a7c47b2dd18827e56179413fff1a2ed83ba261c2528f01af0f2093c1efaeecce67c9d1cb865235ee11db6a2646970667358221220e696adc3959dd1f1279c77114db17de75c2ad744b82fe897ee8b0ade6874ef2464736f6c6343000807003346756e6374696f6e206d7573742062652063616c6c656420696e7369646520746e65742e636f6e73656e7379732e746f6b656e6578742e416c6c6f77457874656e73696f6e";

type MockAllowExtensionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockAllowExtensionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockAllowExtension__factory extends ContractFactory {
  constructor(...args: MockAllowExtensionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockAllowExtension> {
    return super.deploy(overrides || {}) as Promise<MockAllowExtension>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockAllowExtension {
    return super.attach(address) as MockAllowExtension;
  }
  override connect(signer: Signer): MockAllowExtension__factory {
    return super.connect(signer) as MockAllowExtension__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockAllowExtensionInterface {
    return new utils.Interface(_abi) as MockAllowExtensionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockAllowExtension {
    return new Contract(address, _abi, signerOrProvider) as MockAllowExtension;
  }
}
