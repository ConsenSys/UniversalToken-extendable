/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AllowExtension,
  AllowExtensionInterface,
} from "../AllowExtension";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AllowlistedAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AllowlistedAdminAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AllowlistedAdminRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AllowlistedRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "roleId",
        type: "bytes32",
      },
    ],
    name: "RoleAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "roleId",
        type: "bytes32",
      },
    ],
    name: "RoleRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "extensionDeployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "externalFunctions",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "roleId",
        type: "bytes32",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "interfaceLabel",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TokenStandard",
        name: "standard",
        type: "uint8",
      },
    ],
    name: "isTokenStandardSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "packageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requiredRoles",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isAllowlisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addAllowlisted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeAllowlisted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isAllowlistedAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addAllowlistedAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeAllowlistedAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "partition",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "operator",
            type: "address",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "operatorData",
            type: "bytes",
          },
        ],
        internalType: "struct TransferData",
        name: "data",
        type: "tuple",
      },
    ],
    name: "onTransferExecuted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50603780546001600160a01b031916331790556200002e62000158565b62000040630b41de7160e21b62000196565b6200005263682fb23760e11b62000196565b62000064634b744bff60e11b62000196565b6200007663d29dd47d60e01b62000196565b60408051808201909152601681527f6973416c6c6f776c6973746564286164647265737329000000000000000000006020820152620000b59062000251565b60408051808201909152601b81527f6973416c6c6f776c697374656441646d696e28616464726573732900000000006020820152620000f49062000251565b6200010663f8fba5a360e01b6200028d565b620001186363aa13c560e01b6200028d565b6200012262000309565b6200014660405180606001604052806025815260200162001643602591396200033b565b620001526001620003b2565b620006af565b60375460405162000179916001600160a01b0316906039906020016200055c565b60408051601f198184030181529190528051602090910120603a55565b303b15620001f15760405162461bcd60e51b815260206004820152602e60248201526000805160206200162383398151915260448201526d34329031b7b739ba393ab1ba37b960911b60648201526084015b60405180910390fd5b603480546001810182556000919091527f46bddb1178e94d7f2892ff5f366840eb658911794f2c3a44c450aa2c505186c16008820401805463ffffffff60079093166004026101000a928302191660e09390931c91909102919091179055565b6200028a816040516020016200026891906200061e565b604051602081830303815290604052805190602001206200019660201b60201c565b50565b303b15620002e45760405162461bcd60e51b815260206004820152602e60248201526000805160206200162383398151915260448201526d34329031b7b739ba393ab1ba37b960911b6064820152608401620001e8565b6001600160e01b0319166000908152603560205260409020805460ff19166001179055565b6200031560006200040e565b6200032160016200040e565b6200032d60026200040e565b6200033960036200040e565b565b303b15620003925760405162461bcd60e51b815260206004820152602e60248201526000805160206200162383398151915260448201526d34329031b7b739ba393ab1ba37b960911b6064820152608401620001e8565b8051620003a7906039906020840190620004b6565b506200028a62000158565b303b15620004095760405162461bcd60e51b815260206004820152602e60248201526000805160206200162383398151915260448201526d34329031b7b739ba393ab1ba37b960911b6064820152608401620001e8565b603855565b303b15620004655760405162461bcd60e51b815260206004820152602e60248201526000805160206200162383398151915260448201526d34329031b7b739ba393ab1ba37b960911b6064820152608401620001e8565b60016033600083600381111562000480576200048062000699565b600381111562000494576200049462000699565b81526020810191909152604001600020805460ff191691151591909117905550565b828054620004c4906200065c565b90600052602060002090601f016020900481019282620004e8576000855562000533565b82601f106200050357805160ff191683800117855562000533565b8280016001018555821562000533579182015b828111156200053357825182559160200191906001019062000516565b506200054192915062000545565b5090565b5b8082111562000541576000815560010162000546565b606083901b6001600160601b031916815281546000906014908290600181811c90828116806200058d57607f831692505b6020808410821415620005ae57634e487b7160e01b86526022600452602486fd5b818015620005c55760018114620005db576200060e565b60ff1986168a890152848a01880196506200060e565b60008b81526020902060005b86811015620006045781548c82018b0152908501908301620005e7565b505087858b010196505b50949a9950505050505050505050565b6000825160005b8181101562000641576020818601810151858301520162000625565b8181111562000651576000828501525b509190910192915050565b600181811c908216806200067157607f821691505b602082108114156200069357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b610f6480620006bf6000396000f3fe6080604052600436106100f75760003560e01c8063866d28711161008a578063c6ba1b5711610059578063c6ba1b571461028f578063cd28fc8f146102af578063d05f646e146102d1578063d29dd47d146102f157600080fd5b8063866d28711461020d57806396e897fe1461022d578063a75a245a1461024d578063ac4ab3fb1461026f57600080fd5b806335d94527116100c657806335d94527146101995780633e2a50eb146101bb57806354fd4d50146101e35780638129fc1c146101f857600080fd5b806305a3b8091461010357806327df5046146101385780632d0779c41461015857806334328ef61461017a57600080fd5b366100fe57005b600080fd5b34801561010f57600080fd5b5061012361011e366004610bc7565b610311565b60405190151581526020015b60405180910390f35b34801561014457600080fd5b50610123610153366004610bc7565b610331565b34801561016457600080fd5b50610178610173366004610bc7565b61034b565b005b34801561018657600080fd5b50603a545b60405190815260200161012f565b3480156101a557600080fd5b506101ae6103aa565b60405161012f9190610dd1565b3480156101c757600080fd5b506037546040516001600160a01b03909116815260200161012f565b3480156101ef57600080fd5b5060385461018b565b34801561020457600080fd5b5061017861043c565b34801561021957600080fd5b50610123610228366004610c0c565b61046b565b34801561023957600080fd5b50610178610248366004610bc7565b6104ae565b34801561025957600080fd5b506102626104ed565b60405161012f9190610d8f565b34801561027b57600080fd5b5061012361028a366004610be2565b610571565b34801561029b57600080fd5b506101236102aa366004610c2d565b610584565b3480156102bb57600080fd5b506102c4610728565b60405161012f9190610d4b565b3480156102dd57600080fd5b506101786102ec366004610bc7565b61077f565b3480156102fd57600080fd5b5061017861030c366004610bc7565b6107be565b600061032b82600080516020610eef833981519152610571565b92915050565b600061032b82600080516020610f0f833981519152610571565b61036a6103566107fd565b600080516020610f0f833981519152610571565b61038f5760405162461bcd60e51b815260040161038690610e26565b60405180910390fd5b6103a781600080516020610eef833981519152610850565b50565b6060603b80546103b990610e87565b80601f01602080910402602001604051908101604052809291908181526020018280546103e590610e87565b80156104325780601f1061040757610100808354040283529160200191610432565b820191906000526020600020905b81548152906001019060200180831161041557829003601f168201915b5050505050905090565b61045b6104476107fd565b600080516020610f0f833981519152610850565b6104693063c6ba1b57610894565b565b60006033600083600381111561048357610483610ec2565b600381111561049457610494610ec2565b815260208101919091526040016000205460ff1692915050565b6104b96103566107fd565b6104d55760405162461bcd60e51b815260040161038690610e26565b6103a781600080516020610f0f833981519152610850565b6060603480548060200260200160405190810160405280929190818152602001828054801561043257602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841161052a5790505050505050905090565b600061057d828461095e565b9392505050565b60006105b77f66ad66e3451c55c1997c7b22154c2a8caa66dbcc3a201482e1fc5e25434dd133546001600160a01b031690565b6001600160a01b0316336001600160a01b03161461060d5760405162461bcd60e51b8152602060048201526013602482015272151bdad95b8e88155b985d5d1a1bdc9a5e9959606a1b6044820152606401610386565b60808201516000906001600160a01b0316158061064157506106418360800151600080516020610eef833981519152610571565b60a08401519091506000906001600160a01b0316158061067857506106788460a00151600080516020610eef833981519152610571565b9050816106c75760405162461bcd60e51b815260206004820152601f60248201527f66726f6d2061646472657373206973206e6f7420616c6c6f776c6973746564006044820152606401610386565b806107145760405162461bcd60e51b815260206004820152601d60248201527f746f2061646472657373206973206e6f7420616c6c6f776c69737465640000006044820152606401610386565b81801561071e5750805b925050505b919050565b6060603680548060200260200160405190810160405280929190818152602001828054801561043257602002820191906000526020600020905b815481526020019060010190808311610762575050505050905090565b61078a6103566107fd565b6107a65760405162461bcd60e51b815260040161038690610e26565b6103a781600080516020610eef8339815191526109e1565b6107c96103566107fd565b6107e55760405162461bcd60e51b815260040161038690610e26565b6103a781600080516020610f0f8339815191526109e1565b60006018361080159061083957507f66ad66e3451c55c1997c7b22154c2a8caa66dbcc3a201482e1fc5e25434dd135546001600160a01b031633145b1561084b575060131936013560601c90565b503390565b61085a8183610a25565b60405181906001600160a01b038416907faa695d83684b95e18fda4eda7e1794787e74fbc90097a9582f5c41989687883e90600090a35050565b60006108c77f66ad66e3451c55c1997c7b22154c2a8caa66dbcc3a201482e1fc5e25434dd133546001600160a01b031690565b604080516303d18fed60e51b81527fffa12f3235609338cae9786d834825f13134ceb8cead17698174270813895eac600482015263ffffffff8516602087901b1790911b60248201529091506001600160a01b03821690637a31fda090604401600060405180830381600087803b15801561094157600080fd5b505af1158015610955573d6000803e3d6000fd5b50505050505050565b60006001600160a01b0382166109c15760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b6064820152608401610386565b506001600160a01b03166000908152602091909152604090205460ff1690565b6109eb8183610aa1565b60405181906001600160a01b038416907f47808f9766351846ab3f47ddfd0cfc00fd1a4831674f2c872826932b0184d0be90600090a35050565b610a2f828261095e565b15610a7c5760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c65006044820152606401610386565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b610aab828261095e565b610b015760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b6064820152608401610386565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b80356001600160a01b038116811461072357600080fd5b600082601f830112610b4b57600080fd5b813567ffffffffffffffff80821115610b6657610b66610ed8565b604051601f8301601f19908116603f01168101908282118183101715610b8e57610b8e610ed8565b81604052838152866020858801011115610ba757600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215610bd957600080fd5b61057d82610b23565b60008060408385031215610bf557600080fd5b610bfe83610b23565b946020939093013593505050565b600060208284031215610c1e57600080fd5b81356004811061057d57600080fd5b600060208284031215610c3f57600080fd5b813567ffffffffffffffff80821115610c5757600080fd5b908301906101408286031215610c6c57600080fd5b610c74610e5d565b610c7d83610b23565b8152602083013582811115610c9157600080fd5b610c9d87828601610b3a565b60208301525060408301356040820152610cb960608401610b23565b6060820152610cca60808401610b23565b6080820152610cdb60a08401610b23565b60a082015260c083013560c082015260e083013560e08201526101008084013583811115610d0857600080fd5b610d1488828701610b3a565b8284015250506101208084013583811115610d2e57600080fd5b610d3a88828701610b3a565b918301919091525095945050505050565b6020808252825182820181905260009190848201906040850190845b81811015610d8357835183529284019291840191600101610d67565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015610d835783516001600160e01b03191683529284019291840191600101610dab565b600060208083528351808285015260005b81811015610dfe57858101830151858201604001528201610de2565b81811115610e10576000604083870101525b50601f01601f1916929092016040019392505050565b60208082526017908201527f4e6f7420616e20616c6c6f77206c6973742061646d696e000000000000000000604082015260600190565b604051610140810167ffffffffffffffff81118282101715610e8157610e81610ed8565b60405290565b600181811c90821680610e9b57607f821691505b60208210811415610ebc57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fdfe6b95424c74b5189257615546fcf8a916982dfd76093a7c47b2dd18827e56179413fff1a2ed83ba261c2528f01af0f2093c1efaeecce67c9d1cb865235ee11db6a2646970667358221220fccda4723db8333a803c2bc78c5bfdca6663e13c5b1f3c327f44fa3ee5bc332964736f6c6343000807003346756e6374696f6e206d7573742062652063616c6c656420696e7369646520746e65742e636f6e73656e7379732e746f6b656e6578742e416c6c6f77457874656e73696f6e";

type AllowExtensionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AllowExtensionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AllowExtension__factory extends ContractFactory {
  constructor(...args: AllowExtensionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AllowExtension> {
    return super.deploy(overrides || {}) as Promise<AllowExtension>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AllowExtension {
    return super.attach(address) as AllowExtension;
  }
  override connect(signer: Signer): AllowExtension__factory {
    return super.connect(signer) as AllowExtension__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AllowExtensionInterface {
    return new utils.Interface(_abi) as AllowExtensionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AllowExtension {
    return new Contract(address, _abi, signerOrProvider) as AllowExtension;
  }
}
