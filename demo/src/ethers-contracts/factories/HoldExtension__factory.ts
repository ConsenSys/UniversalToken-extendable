/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { HoldExtension, HoldExtensionInterface } from "../HoldExtension";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "holdId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "lockPreimage",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "ExecutedHold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "holdId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "notary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expirationDateTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "lockHash",
        type: "bytes32",
      },
    ],
    name: "NewHold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "holdId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ReleaseHold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "roleId",
        type: "bytes32",
      },
    ],
    name: "RoleAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "roleId",
        type: "bytes32",
      },
    ],
    name: "RoleRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "extensionDeployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "externalFunctions",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "roleId",
        type: "bytes32",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "interfaceLabel",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TokenStandard",
        name: "standard",
        type: "uint8",
      },
    ],
    name: "isTokenStandardSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "packageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requiredRoles",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "notary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expirationDateTime",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "lockHash",
        type: "bytes32",
      },
    ],
    name: "generateHoldId",
    outputs: [
      {
        internalType: "bytes32",
        name: "holdId",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "notary",
        type: "address",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "retrieveHoldHashId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "holdId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "notary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expirationDateTime",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "lockHash",
        type: "bytes32",
      },
    ],
    name: "hold",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "holdId",
        type: "bytes32",
      },
    ],
    name: "retrieveHoldData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "notary",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationDateTime",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "secretHash",
            type: "bytes32",
          },
          {
            internalType: "enum HoldStatusCode",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct ERC20HoldData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "holdId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "lockPreimage",
        type: "bytes32",
      },
    ],
    name: "executeHold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "holdId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "lockPreimage",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "executeHold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "holdId",
        type: "bytes32",
      },
    ],
    name: "executeHold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "holdId",
        type: "bytes32",
      },
    ],
    name: "releaseHold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOnHold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "spendableBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupplyOnHold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "holdId",
        type: "bytes32",
      },
    ],
    name: "holdStatus",
    outputs: [
      {
        internalType: "enum HoldStatusCode",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "partition",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "operator",
            type: "address",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "operatorData",
            type: "bytes",
          },
        ],
        internalType: "struct TransferData",
        name: "data",
        type: "tuple",
      },
    ],
    name: "onTransferExecuted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "partition",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "operator",
            type: "address",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "operatorData",
            type: "bytes",
          },
        ],
        internalType: "struct TransferData",
        name: "data",
        type: "tuple",
      },
    ],
    name: "onApproveExecuted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50603780546001600160a01b031916331790556200002e620001c6565b6200005260405180606001604052806024815260200162002f686024913962000204565b60408051808201909152600d81526c2437b63222bc3a32b739b4b7b760991b6020820152620000819062000282565b6200008d6000620002f2565b6200009960016200039a565b620000ab636074198760e11b620003f6565b620000bd639335c28f60e01b620003f6565b620000cf6362d2346360e11b620003f6565b620000e1630f8f8b8360e01b620003f6565b620000f3632d9fdef560e21b620003f6565b60408051808201909152601481527f65786563757465486f6c6428627974657333322900000000000000000000000060208201526200013290620004ad565b60408051808201909152601c81527f65786563757465486f6c6428627974657333322c62797465733332290000000060208201526200017190620004ad565b6200019560405180606001604052806024815260200162002f2460249139620004ad565b620001c07fe19ebe32f541cfc5908f5d7254656256a86e132061240fb1a747fd9d3c59fde6620004e6565b6200076b565b603754604051620001e7916001600160a01b03169060399060200162000618565b60408051601f198184030181529190528051602090910120603a55565b303b156200025f5760405162461bcd60e51b815260206004820152602e602482015260008051602062002f4883398151915260448201526d34329031b7b739ba393ab1ba37b960911b60648201526084015b60405180910390fd5b80516200027490603990602084019062000572565b506200027f620001c6565b50565b303b15620002d95760405162461bcd60e51b815260206004820152602e602482015260008051602062002f4883398151915260448201526d34329031b7b739ba393ab1ba37b960911b606482015260840162000256565b8051620002ee90603b90602084019062000572565b5050565b303b15620003495760405162461bcd60e51b815260206004820152602e602482015260008051602062002f4883398151915260448201526d34329031b7b739ba393ab1ba37b960911b606482015260840162000256565b60016033600083600381111562000364576200036462000755565b600381111562000378576200037862000755565b81526020810191909152604001600020805460ff191691151591909117905550565b303b15620003f15760405162461bcd60e51b815260206004820152602e602482015260008051602062002f4883398151915260448201526d34329031b7b739ba393ab1ba37b960911b606482015260840162000256565b603855565b303b156200044d5760405162461bcd60e51b815260206004820152602e602482015260008051602062002f4883398151915260448201526d34329031b7b739ba393ab1ba37b960911b606482015260840162000256565b603480546001810182556000919091527f46bddb1178e94d7f2892ff5f366840eb658911794f2c3a44c450aa2c505186c16008820401805463ffffffff60079093166004026101000a928302191660e09390931c91909102919091179055565b6200027f81604051602001620004c49190620006da565b60405160208183030381529060405280519060200120620003f660201b60201c565b303b156200053d5760405162461bcd60e51b815260206004820152602e602482015260008051602062002f4883398151915260448201526d34329031b7b739ba393ab1ba37b960911b606482015260840162000256565b603680546001810182556000919091527f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b80155565b828054620005809062000718565b90600052602060002090601f016020900481019282620005a45760008555620005ef565b82601f10620005bf57805160ff1916838001178555620005ef565b82800160010185558215620005ef579182015b82811115620005ef578251825591602001919060010190620005d2565b50620005fd92915062000601565b5090565b5b80821115620005fd576000815560010162000602565b606083901b6001600160601b031916815281546000906014908290600181811c90828116806200064957607f831692505b60208084108214156200066a57634e487b7160e01b86526022600452602486fd5b8180156200068157600181146200069757620006ca565b60ff1986168a890152848a0188019650620006ca565b60008b81526020902060005b86811015620006c05781548c82018b0152908501908301620006a3565b505087858b010196505b50949a9950505050505050505050565b6000825160005b81811015620006fd5760208186018101518583015201620006e1565b818111156200070d576000828501525b509190910192915050565b600181811c908216806200072d57607f821691505b602082108114156200074f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b6127a9806200077b6000396000f3fe6080604052600436106101445760003560e01c80639335c28f116100b6578063c5a468c61161006f578063c5a468c6146103d6578063c6ba1b571461042b578063cd28fc8f1461044b578063da1ec2461461046d578063f8abd4bc1461049a578063fdec4c21146104ba57600080fd5b80639335c28f146102d25780639d220915146102f2578063a75a245a14610327578063ac4ab3fb14610349578063b67f7bd414610369578063c0e8330e146103b657600080fd5b8063445850af11610108578063445850af1461021257806351bfb9611461023457806354fd4d5014610268578063603dfcb51461027d5780638129fc1c1461029d578063866d2871146102b257600080fd5b80630f8f8b831461015057806334328ef61461018357806335d94527146101985780633c4541f7146101ba5780633e2a50eb146101ea57600080fd5b3661014b57005b600080fd5b34801561015c57600080fd5b5061017061016b366004612007565b610537565b6040519081526020015b60405180910390f35b34801561018f57600080fd5b50603a54610170565b3480156101a457600080fd5b506101ad610613565b60405161017a9190612424565b3480156101c657600080fd5b506101da6101d5366004612208565b6106a5565b604051901515815260200161017a565b3480156101f657600080fd5b506037546040516001600160a01b03909116815260200161017a565b34801561021e57600080fd5b5061023261022d366004612190565b610799565b005b34801561024057600080fd5b507f1f1cd44c9158d580314ae2eafb543037dd9ea915cc479e9d23280b5e1de4ecef54610170565b34801561027457600080fd5b50603854610170565b34801561028957600080fd5b506102326102983660046121b2565b6108c2565b3480156102a957600080fd5b50610232610ad0565b3480156102be57600080fd5b506101da6102cd3660046121e7565b610aee565b3480156102de57600080fd5b506102326102ed366004612106565b610b31565b3480156102fe57600080fd5b5061031261030d366004612022565b610e44565b6040805192835260208301919091520161017a565b34801561033357600080fd5b5061033c610ed8565b60405161017a91906123d4565b34801561035557600080fd5b506101da6103643660046120ba565b610f5c565b34801561037557600080fd5b506103a9610384366004612106565b6000908152600080516020612754833981519152602052604090206006015460ff1690565b60405161017a9190612416565b3480156103c257600080fd5b506101da6103d1366004612138565b610f71565b3480156103e257600080fd5b506101706103f1366004612007565b6001600160a01b031660009081527f1f1cd44c9158d580314ae2eafb543037dd9ea915cc479e9d23280b5e1de4eced602052604090205490565b34801561043757600080fd5b506101da610446366004612208565b6113a4565b34801561045757600080fd5b50610460611599565b60405161017a9190612390565b34801561047957600080fd5b5061048d610488366004612106565b6115f0565b60405161017a9190612506565b3480156104a657600080fd5b506102326104b5366004612106565b6116db565b3480156104c657600080fd5b506101706104d536600461206d565b6040516bffffffffffffffffffffffff19606087811b8216602084015286901b16603482015260488101849052606881018390526088810182905260009060a80160405160208183030381529060405280519060200120905095945050505050565b6001600160a01b03811660009081527f1f1cd44c9158d580314ae2eafb543037dd9ea915cc479e9d23280b5e1de4eced6020526040812054600080516020612754833981519152906105876117ca565b6040516370a0823160e01b81526001600160a01b03868116600483015291909116906370a082319060240160206040518083038186803b1580156105ca57600080fd5b505afa1580156105de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610602919061211f565b61060c9190612693565b9392505050565b6060603b8054610622906126d6565b80601f016020809104026020016040519081016040528092919081815260200182805461064e906126d6565b801561069b5780601f106106705761010080835404028352916020019161069b565b820191906000526020600020905b81548152906001019060200180831161067e57829003601f168201915b5050505050905090565b60006106af6117d9565b6001600160a01b0316336001600160a01b03161461070a5760405162461bcd60e51b8152602060048201526013602482015272151bdad95b8e88155b985d5d1a1bdc9a5e9959606a1b60448201526064015b60405180910390fd5b8160c0015161071c8360800151610537565b10156107905760405162461bcd60e51b815260206004820152603960248201527f486f6c6461626c65546f6b656e3a20616d6f756e74206578636565647320617660448201527f61696c61626c652062616c616e63652028617070726f766529000000000000006064820152608401610701565b5060015b919050565b600082815260008051602061275483398151915260208190526040909120600101546001600160a01b03166107e05760405162461bcd60e51b81526004016107019061248a565b600083815260208290526040902060050154156108955760028260405160200161080c91815260200190565b60408051601f198184030181529082905261082691612374565b602060405180830381855afa158015610843573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610866919061211f565b600084815260208390526040902060050154146108955760405162461bcd60e51b815260040161070190612437565b6000838152602082905260409020600101546108bd90849084906001600160a01b0316611807565b505050565b600083815260008051602061275483398151915260208190526040909120600101546001600160a01b0316156109705760405162461bcd60e51b815260206004820152604760248201527f65786563757465486f6c643a2063616e206e6f7420736574206120726563697060448201527f69656e74206f6e20657865637574696f6e2061732069742077617320736574206064820152661bdb881a1bdb1960ca1b608482015260a401610701565b6001600160a01b0382166109e05760405162461bcd60e51b815260206004820152603160248201527f65786563757465486f6c643a20726563697069656e74206d757374206e6f742060448201527062652061207a65726f206164647265737360781b6064820152608401610701565b60008481526020829052604090206005015415610a9557600283604051602001610a0c91815260200190565b60408051601f1981840301815290829052610a2691612374565b602060405180830381855afa158015610a43573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610a66919061211f565b60008581526020839052604090206005015414610a955760405162461bcd60e51b815260040161070190612437565b600084815260208290526040902060010180546001600160a01b0319166001600160a01b038416179055610aca848484611807565b50505050565b610ade3063c6ba1b57611af8565b610aec30633c4541f7611b9a565b565b600060336000836003811115610b0657610b06612727565b6003811115610b1757610b17612727565b815260208101919091526040016000205460ff1692915050565b8060006000805160206127548339815191529050600160008381526020839052604090206006015460ff166007811115610b6d57610b6d612727565b1480610b9e5750600360008381526020839052604090206006015460ff166007811115610b9c57610b9c612727565b145b610bea5760405162461bcd60e51b815260206004820152601d60248201527f486f6c64206973206e6f7420696e204f726465726564207374617475730000006044820152606401610701565b600080516020612754833981519152610c01611c09565b6000858152602083905260409020546001600160a01b0390811691161415610ccc576000848152602082905260409020600401544211610ca95760405162461bcd60e51b815260206004820152603860248201527f72656c65617365486f6c643a2063616e206f6e6c792072656c6561736520616660448201527f746572207468652065787069726174696f6e20646174652e00000000000000006064820152608401610701565b60008481526020829052604090206006908101805460ff19169091179055610d7c565b610cd4611c09565b6000858152602083905260409020600201546001600160a01b03908116911614610d5f5760405162461bcd60e51b815260206004820152603660248201527f72656c65617365486f6c643a2063616c6c6572206d75737420626520746865206044820152753437b6321039b2b73232b91037b9103737ba30b93c9760511b6064820152608401610701565b6000848152602082905260409020600601805460ff191660041790555b600084815260208281526040808320600381015490546001600160a01b031684526001850190925290912054610db191611c5c565b60008581526020838152604080832080546001600160a01b03168452600186018352908320939093559086905282905260039081015490820154610df491611c5c565b6003820155837f67493c41cf2a398ecd74af2c26b3ad6114f9a0b0532ea06fc327adec60151102610e23611c09565b6040516001600160a01b03909116815260200160405180910390a250505050565b604080516bffffffffffffffffffffffff1930606090811b821660208085019190915296811b8216603484015294851b811660488301529590931b909416605c830152607080830191909152835180830390910181526090909101835280519082012060008181527f1f1cd44c9158d580314ae2eafb543037dd9ea915cc479e9d23280b5e1de4ecee909252919020549091565b6060603480548060200260200160405190810160405280929190818152602001828054801561069b57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610f155790505050505050905090565b6000610f688284611c68565b90505b92915050565b60006001600160a01b038516610fd95760405162461bcd60e51b815260206004820152602760248201527f686f6c643a206e6f74617279206d757374206e6f742062652061207a65726f206044820152666164647265737360c81b6064820152608401610701565b836110355760405162461bcd60e51b815260206004820152602660248201527f686f6c643a20616d6f756e74206d7573742062652067726561746572207468616044820152656e207a65726f60d01b6064820152608401610701565b8330630f8f8b83611044611c09565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b15801561108357600080fd5b505afa158015611097573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110bb919061211f565b10156111185760405162461bcd60e51b815260206004820152602660248201527f686f6c643a20616d6f756e74206578636565647320617661696c61626c652062604482015265616c616e636560d01b6064820152608401610701565b600080516020612754833981519152600061113c87611135611c09565b8a89610e44565b50600081815260028401602052604081208b905590915060008a81526020849052604090206006015460ff16600781111561117957611179612727565b146111c65760405162461bcd60e51b815260206004820152601760248201527f686f6c643a20696420616c7265616479206578697374730000000000000000006044820152606401610701565b6040518060e001604052806111d9611c09565b6001600160a01b03168152602001896001600160a01b03168152602001886001600160a01b031681526020018781526020018681526020018581526020016001600781111561122a5761122a612727565b905260008a81526020848152604091829020835181546001600160a01b03199081166001600160a01b03928316178355928501516001808401805486169284169290921790915593850151600283018054909416911617909155606083015160038201556080830151600482015560a0830151600582015560c083015160068201805492939192909160ff19909116908360078111156112cc576112cc612727565b0217905550905050611306868360010160006112e6611c09565b6001600160a01b0316815260208101919091526040016000205490611ceb565b826001016000611314611c09565b6001600160a01b03168152602081019190915260400160002055600382015461133d9087611ceb565b600383015560408051878152602081018790529081018590526001600160a01b0380891691908a16908b907fe978043d2c2c19e698dfa9c4c7d635cd7a872597314f9f0b7979dae393c6da7c9060600160405180910390a450600198975050505050505050565b60006113ae6117d9565b6001600160a01b0316336001600160a01b0316146114045760405162461bcd60e51b8152602060048201526013602482015272151bdad95b8e88155b985d5d1a1bdc9a5e9959606a1b6044820152606401610701565b60808201516001600160a01b0316156107905760008261012001515111801561146c57507f66ad66e3451c55c1997c7b22154c2a8caa66dbcc3a201482e1fc5e25434dd134546001600160a01b03166001600160a01b031682606001516001600160a01b0316145b1561151357600082610120015180602001905181019061148c919061211f565b905060006000805160206127548339815191529050600760008381526020839052604090206006015460ff1660078111156114c9576114c9612727565b1461150c5760405162461bcd60e51b8152602060048201526013602482015272486f6c6420696e20776569726420737461746560681b6044820152606401610701565b5050610790565b8160c001516115258360800151610537565b10156107905760405162461bcd60e51b815260206004820152603a60248201527f486f6c6461626c65546f6b656e3a20616d6f756e74206578636565647320617660448201527f61696c61626c652062616c616e636520287472616e73666572290000000000006064820152608401610701565b6060603680548060200260200160405190810160405280929190818152602001828054801561069b57602002820191906000526020600020905b8154815260200190600101908083116115d3575050505050905090565b61162d6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a081018290529060c082015290565b60008281526000805160206127548339815191526020818152604092839020835160e08101855281546001600160a01b03908116825260018301548116938201939093526002820154909216938201939093526003830154606082015260048301546080820152600583015460a082015260068301549192909160c083019060ff1660078111156116c0576116c0612727565b60078111156116d1576116d1612727565b9052509392505050565b600081815260008051602061275483398151915260208190526040909120600101546001600160a01b03166117225760405162461bcd60e51b81526004016107019061248a565b600082815260208290526040902060050154156117a05760405162461bcd60e51b815260206004820152603660248201527f65786563757465486f6c643a206e65656420707265696d6167652069662074686044820152750ca40d0ded8c840d0c2e640c240d8dec6d640d0c2e6d60531b6064820152608401610701565b6000828152602082905260408120600101546117c69184916001600160a01b0316611807565b5050565b60006117d46117d9565b905090565b7f66ad66e3451c55c1997c7b22154c2a8caa66dbcc3a201482e1fc5e25434dd133546001600160a01b031690565b8260006000805160206127548339815191529050600160008381526020839052604090206006015460ff16600781111561184357611843612727565b14806118745750600360008381526020839052604090206006015460ff16600781111561187257611872612727565b145b6118c05760405162461bcd60e51b815260206004820152601d60248201527f486f6c64206973206e6f7420696e204f726465726564207374617475730000006044820152606401610701565b6000805160206127548339815191526118d7611c09565b6000878152602083905260409020600201546001600160a01b039081169116146119575760405162461bcd60e51b815260206004820152602b60248201527f65786563757465486f6c643a2063616c6c6572206d757374206265207468652060448201526a686f6c64206e6f7461727960a81b6064820152608401610701565b60008681526020828152604080832060068101805460ff19166007179055805460039091015482519384018b90526119ac936001600160a01b0390921692899201604051602081830303815290604052611cf7565b90506119b781611d1f565b5060008781526020838152604080832060068101805460ff19166002179055600381015490546001600160a01b0316845260018601909252909120546119fc91611c5c565b60008881526020848152604080832080546001600160a01b03168452600187018352908320939093559089905283905260039081015490830154611a3f91611c5c565b600383810191909155600088815260208490526040812060028101548154600183015492909401549293611a86936001600160a01b03928316939183169290911690610e44565b50905082600201600082815260200190815260200160002060009055877fc6d1a93a7a047b3f030e0a63b85e07ff5741659917295090572c23834d53281d8888604051611ae69291909182526001600160a01b0316602082015260400190565b60405180910390a25050505050505050565b6000611b026117d9565b604080516303d18fed60e51b81527f4e8f8a59dddabdec2c086b225fc5e5d24a1089149d00bccea793560a7e9a3b52600482015263ffffffff8516602087901b1790911b60248201529091506001600160a01b03821690637a31fda0906044015b600060405180830381600087803b158015611b7d57600080fd5b505af1158015611b91573d6000803e3d6000fd5b50505050505050565b6000611ba46117d9565b604080516303d18fed60e51b81527f59b6b79559a56e2653976ab4e36517ee79bca11aefd69bff3ed5be63f9750778600482015263ffffffff8516602087901b1790911b60248201529091506001600160a01b03821690637a31fda090604401611b63565b600060183610801590611c4557507f66ad66e3451c55c1997c7b22154c2a8caa66dbcc3a201482e1fc5e25434dd135546001600160a01b031633145b15611c57575060131936013560601c90565b503390565b6000610f688284612693565b60006001600160a01b038216611ccb5760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b6064820152608401610701565b506001600160a01b03166000908152602091909152604090205460ff1690565b6000610f68828461267b565b611cff611f10565b6000611d0c868686611da6565b6101208101849052915050949350505050565b6000611d296117d9565b6001600160a01b031663e29ed788836040518263ffffffff1660e01b8152600401611d54919061256b565b602060405180830381600087803b158015611d6e57600080fd5b505af1158015611d82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6b91906120e4565b611dae611f10565b8160006001611de67f66ad66e3451c55c1997c7b22154c2a8caa66dbcc3a201482e1fc5e25434dd1355460ff600160a81b9091041690565b6003811115611df757611df7612727565b1415611e04575060009050825b6000611e0e6117d9565b9050604051806101400160405280826001600160a01b03168152602001611e356000903690565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509385525050506020820152604001611ea47f66ad66e3451c55c1997c7b22154c2a8caa66dbcc3a201482e1fc5e25434dd134546001600160a01b031690565b6001600160a01b03168152602001886001600160a01b03168152602001876001600160a01b031681526020018481526020018381526020016040518060200160405280600081525081526020016040518060200160405280600081525081525093505050509392505050565b604080516101408101825260008082526060602083018190529282018190528282018190526080820181905260a0820181905260c0820181905260e0820152610100810182905261012081019190915290565b80356001600160a01b038116811461079457600080fd5b600082601f830112611f8b57600080fd5b813567ffffffffffffffff80821115611fa657611fa661273d565b604051601f8301601f19908116603f01168101908282118183101715611fce57611fce61273d565b81604052838152866020858801011115611fe757600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561201957600080fd5b610f6882611f63565b6000806000806080858703121561203857600080fd5b61204185611f63565b935061204f60208601611f63565b925061205d60408601611f63565b9396929550929360600135925050565b600080600080600060a0868803121561208557600080fd5b61208e86611f63565b945061209c60208701611f63565b94979496505050506040830135926060810135926080909101359150565b600080604083850312156120cd57600080fd5b6120d683611f63565b946020939093013593505050565b6000602082840312156120f657600080fd5b8151801515811461060c57600080fd5b60006020828403121561211857600080fd5b5035919050565b60006020828403121561213157600080fd5b5051919050565b60008060008060008060c0878903121561215157600080fd5b8635955061216160208801611f63565b945061216f60408801611f63565b9350606087013592506080870135915060a087013590509295509295509295565b600080604083850312156121a357600080fd5b50508035926020909101359150565b6000806000606084860312156121c757600080fd5b83359250602084013591506121de60408501611f63565b90509250925092565b6000602082840312156121f957600080fd5b81356004811061060c57600080fd5b60006020828403121561221a57600080fd5b813567ffffffffffffffff8082111561223257600080fd5b90830190610140828603121561224757600080fd5b61224f612651565b61225883611f63565b815260208301358281111561226c57600080fd5b61227887828601611f7a565b6020830152506040830135604082015261229460608401611f63565b60608201526122a560808401611f63565b60808201526122b660a08401611f63565b60a082015260c083013560c082015260e083013560e082015261010080840135838111156122e357600080fd5b6122ef88828701611f7a565b828401525050610120808401358381111561230957600080fd5b61231588828701611f7a565b918301919091525095945050505050565b6000815180845261233e8160208601602086016126aa565b601f01601f19169290920160200192915050565b6008811061237057634e487b7160e01b600052602160045260246000fd5b9052565b600082516123868184602087016126aa565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b818110156123c8578351835292840192918401916001016123ac565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156123c85783516001600160e01b031916835292840192918401916001016123f0565b60208101610f6b8284612352565b602081526000610f686020830184612326565b60208082526033908201527f65786563757465486f6c643a20707265696d616765206861736820646f6573206040820152720dcdee840dac2e8c6d040d8dec6d640d0c2e6d606b1b606082015260800190565b60208082526056908201527f65786563757465486f6c643a206d75737420706173732074686520726563697060408201527f69656e74206f6e20657865637574696f6e2061732074686520726563697069656060820152751b9d081dd85cc81b9bdd081cd95d081bdb881a1bdb1960521b608082015260a00190565b600060e08201905060018060a01b0380845116835280602085015116602084015280604085015116604084015250606083015160608301526080830151608083015260a083015160a083015260c083015161256460c0840182612352565b5092915050565b602081526125856020820183516001600160a01b03169052565b600060208301516101408060408501526125a3610160850183612326565b91506040850151606085015260608501516125c960808601826001600160a01b03169052565b5060808501516001600160a01b03811660a08601525060a08501516001600160a01b03811660c08601525060c085015160e085015260e0850151610100818187015280870151915050601f1961012081878603018188015261262b8584612326565b9088015187820390920184880152935090506126478382612326565b9695505050505050565b604051610140810167ffffffffffffffff811182821017156126755761267561273d565b60405290565b6000821982111561268e5761268e612711565b500190565b6000828210156126a5576126a5612711565b500390565b60005b838110156126c55781810151838201526020016126ad565b83811115610aca5750506000910152565b600181811c908216806126ea57607f821691505b6020821081141561270b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fdfe1f1cd44c9158d580314ae2eafb543037dd9ea915cc479e9d23280b5e1de4ececa2646970667358221220cd49fe9f6bae3e2466218b5a8eacc090425a872ecb301f645f67ee6cd815a1a164736f6c6343000807003365786563757465486f6c6428627974657333322c627974657333322c616464726573732946756e6374696f6e206d7573742062652063616c6c656420696e7369646520746e65742e636f6e73656e7379732e746f6b656e6578742e486f6c64457874656e73696f6e";

type HoldExtensionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HoldExtensionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HoldExtension__factory extends ContractFactory {
  constructor(...args: HoldExtensionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HoldExtension> {
    return super.deploy(overrides || {}) as Promise<HoldExtension>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HoldExtension {
    return super.attach(address) as HoldExtension;
  }
  override connect(signer: Signer): HoldExtension__factory {
    return super.connect(signer) as HoldExtension__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HoldExtensionInterface {
    return new utils.Interface(_abi) as HoldExtensionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HoldExtension {
    return new Contract(address, _abi, signerOrProvider) as HoldExtension;
  }
}
