/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  PauseExtension,
  PauseExtensionInterface,
} from "../PauseExtension";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pauser",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pauser",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PausedFor",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PauserAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PauserRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "roleId",
        type: "bytes32",
      },
    ],
    name: "RoleAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "roleId",
        type: "bytes32",
      },
    ],
    name: "RoleRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pauser",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pauser",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "UnpausedFor",
    type: "event",
  },
  {
    inputs: [],
    name: "extensionDeployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "externalFunctions",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "roleId",
        type: "bytes32",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "interfaceLabel",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TokenStandard",
        name: "standard",
        type: "uint8",
      },
    ],
    name: "isTokenStandardSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "packageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requiredRoles",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
  {
    inputs: [],
    name: "isPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "isPausedFor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "pauseFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "isPauser",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "unpauseFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addPauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removePauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renouncePauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "partition",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "operator",
            type: "address",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "operatorData",
            type: "bytes",
          },
        ],
        internalType: "struct TransferData",
        name: "data",
        type: "tuple",
      },
    ],
    name: "onTransferExecuted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50603780546001600160a01b031916331790556200002e62000169565b620000406320b707b160e21b620001a7565b62000052636b2c0f5560e01b620001a7565b62000064636ef8d66d60e01b620001a7565b62000076638456cb5960e01b620001a7565b62000088631fa5d41d60e11b620001a7565b6200009a63456db8fb60e01b620001a7565b620000ac6301682c8b60e61b620001a7565b60408051808201909152600a8152696973506175736564282960b01b6020820152620000d89062000262565b60408051808201909152601481527f6973506175736564466f722861646472657373290000000000000000000000006020820152620001179062000262565b6200012963675215bb60e11b6200029e565b620001336200031a565b620001576040518060600160405280602581526020016200198e602591396200034c565b620001636001620003c3565b620006c0565b6037546040516200018a916001600160a01b0316906039906020016200056d565b60408051601f198184030181529190528051602090910120603a55565b303b15620002025760405162461bcd60e51b815260206004820152602e60248201526000805160206200196e83398151915260448201526d34329031b7b739ba393ab1ba37b960911b60648201526084015b60405180910390fd5b603480546001810182556000919091527f46bddb1178e94d7f2892ff5f366840eb658911794f2c3a44c450aa2c505186c16008820401805463ffffffff60079093166004026101000a928302191660e09390931c91909102919091179055565b6200029b816040516020016200027991906200062f565b60405160208183030381529060405280519060200120620001a760201b60201c565b50565b303b15620002f55760405162461bcd60e51b815260206004820152602e60248201526000805160206200196e83398151915260448201526d34329031b7b739ba393ab1ba37b960911b6064820152608401620001f9565b6001600160e01b0319166000908152603560205260409020805460ff19166001179055565b6200032660006200041f565b6200033260016200041f565b6200033e60026200041f565b6200034a60036200041f565b565b303b15620003a35760405162461bcd60e51b815260206004820152602e60248201526000805160206200196e83398151915260448201526d34329031b7b739ba393ab1ba37b960911b6064820152608401620001f9565b8051620003b8906039906020840190620004c7565b506200029b62000169565b303b156200041a5760405162461bcd60e51b815260206004820152602e60248201526000805160206200196e83398151915260448201526d34329031b7b739ba393ab1ba37b960911b6064820152608401620001f9565b603855565b303b15620004765760405162461bcd60e51b815260206004820152602e60248201526000805160206200196e83398151915260448201526d34329031b7b739ba393ab1ba37b960911b6064820152608401620001f9565b600160336000836003811115620004915762000491620006aa565b6003811115620004a557620004a5620006aa565b81526020810191909152604001600020805460ff191691151591909117905550565b828054620004d5906200066d565b90600052602060002090601f016020900481019282620004f9576000855562000544565b82601f106200051457805160ff191683800117855562000544565b8280016001018555821562000544579182015b828111156200054457825182559160200191906001019062000527565b506200055292915062000556565b5090565b5b8082111562000552576000815560010162000557565b606083901b6001600160601b031916815281546000906014908290600181811c90828116806200059e57607f831692505b6020808410821415620005bf57634e487b7160e01b86526022600452602486fd5b818015620005d65760018114620005ec576200061f565b60ff1986168a890152848a01880196506200061f565b60008b81526020902060005b86811015620006155781548c82018b0152908501908301620005f8565b505087858b010196505b50949a9950505050505050505050565b6000825160005b8181101562000652576020818601810151858301520162000636565b8181111562000662576000828501525b509190910192915050565b600181811c908216806200068257607f821691505b60208210811415620006a457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b61129e80620006d06000396000f3fe6080604052600436106101235760003560e01c80636ef8d66d116100a0578063a75a245a11610064578063a75a245a146102f8578063ac4ab3fb1461031a578063b187bd261461033a578063c6ba1b5714610352578063cd28fc8f1461037257600080fd5b80636ef8d66d146102795780638129fc1c1461028e57806382dc1ec4146102a35780638456cb59146102c3578063866d2871146102d857600080fd5b8063456db8fb116100e7578063456db8fb146101e457806346fbf68e1461020457806354fd4d50146102245780635a0b22c0146102395780636b2c0f551461025957600080fd5b80631aab5e7a1461012f57806334328ef61461016457806335d94527146101835780633e2a50eb146101a55780633f4ba83a146101cd57600080fd5b3661012a57005b600080fd5b34801561013b57600080fd5b5061014f61014a366004610ef4565b610394565b60405190151581526020015b60405180910390f35b34801561017057600080fd5b50603a545b60405190815260200161015b565b34801561018f57600080fd5b506101986103cb565b60405161015b9190611120565b3480156101b157600080fd5b506037546040516001600160a01b03909116815260200161015b565b3480156101d957600080fd5b506101e261045d565b005b3480156101f057600080fd5b506101e26101ff366004610ef4565b61059e565b34801561021057600080fd5b5061014f61021f366004610ef4565b6105e9565b34801561023057600080fd5b50603854610175565b34801561024557600080fd5b506101e2610254366004610ef4565b610603565b34801561026557600080fd5b506101e2610274366004610ef4565b61064b565b34801561028557600080fd5b506101e261067e565b34801561029a57600080fd5b506101e2610689565b3480156102af57600080fd5b506101e26102be366004610ef4565b6106c4565b3480156102cf57600080fd5b506101e26106f4565b3480156102e457600080fd5b5061014f6102f3366004610f5b565b610825565b34801561030457600080fd5b5061030d610868565b60405161015b91906110de565b34801561032657600080fd5b5061014f610335366004610f0f565b6108ec565b34801561034657600080fd5b50603c5460ff1661014f565b34801561035e57600080fd5b5061014f61036d366004610f7c565b6108ff565b34801561037e57600080fd5b506103876109c0565b60405161015b919061109a565b60006103a2603c5460ff1690565b806103c557506001600160a01b0382166000908152603d602052604090205460ff165b92915050565b6060603b80546103da906111e1565b80601f0160208091040260200160405190810160405280929190818152602001828054610406906111e1565b80156104535780601f1061042857610100808354040283529160200191610453565b820191906000526020600020905b81548152906001019060200180831161043657829003601f168201915b5050505050905090565b61047c610468610a17565b6000805160206112498339815191526108ec565b6104a15760405162461bcd60e51b815260040161049890611175565b60405180910390fd5b306001600160a01b031663b187bd266040518163ffffffff1660e01b815260040160206040518083038186803b1580156104da57600080fd5b505afa1580156104ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105129190610f39565b6105555760405162461bcd60e51b8152602060048201526014602482015273151bdad95b881b5d5cdd081899481c185d5cd95960621b6044820152606401610498565b603c805460ff19169055610567610a17565b6001600160a01b03167f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa60405160405180910390a2565b6105a9610468610a17565b6105c55760405162461bcd60e51b815260040161049890611175565b6001600160a01b03166000908152603d60205260409020805460ff19166001179055565b60006103c5826000805160206112498339815191526108ec565b61060e610468610a17565b61062a5760405162461bcd60e51b815260040161049890611175565b6001600160a01b03166000908152603d60205260409020805460ff19169055565b610656610468610a17565b6106725760405162461bcd60e51b815260040161049890611175565b61067b81610a6a565b50565b61068733610a6a565b565b6106a8610694610a17565b600080516020611249833981519152610ab9565b6106b63063c6ba1b57610afd565b6106873063c6ba1b57610b9f565b6106cf610468610a17565b6106eb5760405162461bcd60e51b815260040161049890611175565b61067b81610c0e565b6106ff610468610a17565b61071b5760405162461bcd60e51b815260040161049890611175565b306001600160a01b031663b187bd266040518163ffffffff1660e01b815260040160206040518083038186803b15801561075457600080fd5b505afa158015610768573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078c9190610f39565b156107d95760405162461bcd60e51b815260206004820152601860248201527f546f6b656e206d757374206e6f742062652070617573656400000000000000006044820152606401610498565b603c805460ff191660011790556107ee610a17565b6001600160a01b03167f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25860405160405180910390a2565b60006033600083600381111561083d5761083d61121c565b600381111561084e5761084e61121c565b815260208101919091526040016000205460ff1692915050565b6060603480548060200260200160405190810160405280929190818152602001828054801561045357602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116108a55790505050505050905090565b60006108f88284610c5d565b9392505050565b6000610909610ce0565b6001600160a01b0316336001600160a01b03161461095f5760405162461bcd60e51b8152602060048201526013602482015272151bdad95b8e88155b985d5d1a1bdc9a5e9959606a1b6044820152606401610498565b600061096e8360800151610394565b905080156109b55760405162461bcd60e51b8152602060048201526014602482015273151c985b9cd9995c9cc8185c99481c185d5cd95960621b6044820152606401610498565b60019150505b919050565b6060603680548060200260200160405190810160405280929190818152602001828054801561045357602002820191906000526020600020905b8154815260200190600101908083116109fa575050505050905090565b600060183610801590610a5357507f66ad66e3451c55c1997c7b22154c2a8caa66dbcc3a201482e1fc5e25434dd135546001600160a01b031633145b15610a65575060131936013560601c90565b503390565b610a8281600080516020611249833981519152610d0e565b6040516001600160a01b038216907fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90600090a250565b610ac38183610d52565b60405181906001600160a01b038416907faa695d83684b95e18fda4eda7e1794787e74fbc90097a9582f5c41989687883e90600090a35050565b6000610b07610ce0565b604080516303d18fed60e51b81527fffa12f3235609338cae9786d834825f13134ceb8cead17698174270813895eac600482015263ffffffff8516602087901b1790911b60248201529091506001600160a01b03821690637a31fda0906044015b600060405180830381600087803b158015610b8257600080fd5b505af1158015610b96573d6000803e3d6000fd5b50505050505050565b6000610ba9610ce0565b604080516303d18fed60e51b81527f59b6b79559a56e2653976ab4e36517ee79bca11aefd69bff3ed5be63f9750778600482015263ffffffff8516602087901b1790911b60248201529091506001600160a01b03821690637a31fda090604401610b68565b610c2681600080516020611249833981519152610ab9565b6040516001600160a01b038216907f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890600090a250565b60006001600160a01b038216610cc05760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b6064820152608401610498565b506001600160a01b03166000908152602091909152604090205460ff1690565b7f66ad66e3451c55c1997c7b22154c2a8caa66dbcc3a201482e1fc5e25434dd133546001600160a01b031690565b610d188183610dce565b60405181906001600160a01b038416907f47808f9766351846ab3f47ddfd0cfc00fd1a4831674f2c872826932b0184d0be90600090a35050565b610d5c8282610c5d565b15610da95760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c65006044820152606401610498565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b610dd88282610c5d565b610e2e5760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b6064820152608401610498565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b80356001600160a01b03811681146109bb57600080fd5b600082601f830112610e7857600080fd5b813567ffffffffffffffff80821115610e9357610e93611232565b604051601f8301601f19908116603f01168101908282118183101715610ebb57610ebb611232565b81604052838152866020858801011115610ed457600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215610f0657600080fd5b6108f882610e50565b60008060408385031215610f2257600080fd5b610f2b83610e50565b946020939093013593505050565b600060208284031215610f4b57600080fd5b815180151581146108f857600080fd5b600060208284031215610f6d57600080fd5b8135600481106108f857600080fd5b600060208284031215610f8e57600080fd5b813567ffffffffffffffff80821115610fa657600080fd5b908301906101408286031215610fbb57600080fd5b610fc36111b7565b610fcc83610e50565b8152602083013582811115610fe057600080fd5b610fec87828601610e67565b6020830152506040830135604082015261100860608401610e50565b606082015261101960808401610e50565b608082015261102a60a08401610e50565b60a082015260c083013560c082015260e083013560e0820152610100808401358381111561105757600080fd5b61106388828701610e67565b828401525050610120808401358381111561107d57600080fd5b61108988828701610e67565b918301919091525095945050505050565b6020808252825182820181905260009190848201906040850190845b818110156110d2578351835292840192918401916001016110b6565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156110d25783516001600160e01b031916835292840192918401916001016110fa565b600060208083528351808285015260005b8181101561114d57858101830151858201604001528201611131565b8181111561115f576000604083870101525b50601f01601f1916929092016040019392505050565b60208082526022908201527f4f6e6c7920706175736572732063616e2075736520746869732066756e63746960408201526137b760f11b606082015260800190565b604051610140810167ffffffffffffffff811182821017156111db576111db611232565b60405290565b600181811c908216806111f557607f821691505b6020821081141561121657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fdfe44903c9483129f136535ee184fb7dff3c54fb0b385ce99eadf3283e91d0678daa2646970667358221220ea51cd22152c8eac77d24a376e2376f74ff5d569ba5e5c6d52d9104a137e68c164736f6c6343000807003346756e6374696f6e206d7573742062652063616c6c656420696e7369646520746e65742e636f6e73656e7379732e746f6b656e6578742e5061757365457874656e73696f6e";

type PauseExtensionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PauseExtensionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PauseExtension__factory extends ContractFactory {
  constructor(...args: PauseExtensionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PauseExtension> {
    return super.deploy(overrides || {}) as Promise<PauseExtension>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PauseExtension {
    return super.attach(address) as PauseExtension;
  }
  override connect(signer: Signer): PauseExtension__factory {
    return super.connect(signer) as PauseExtension__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PauseExtensionInterface {
    return new utils.Interface(_abi) as PauseExtensionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PauseExtension {
    return new Contract(address, _abi, signerOrProvider) as PauseExtension;
  }
}
