/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  BlockExtension,
  BlockExtensionInterface,
} from "../BlockExtension";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "BlocklistedAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "BlocklistedAdminAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "BlocklistedAdminRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "BlocklistedRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "roleId",
        type: "bytes32",
      },
    ],
    name: "RoleAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "roleId",
        type: "bytes32",
      },
    ],
    name: "RoleRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "extensionDeployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "externalFunctions",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "roleId",
        type: "bytes32",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "interfaceLabel",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TokenStandard",
        name: "standard",
        type: "uint8",
      },
    ],
    name: "isTokenStandardSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "packageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requiredRoles",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isBlocklisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addBlocklisted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeBlocklisted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isBlocklistedAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addBlocklistedAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeBlocklistedAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "partition",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "operator",
            type: "address",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "operatorData",
            type: "bytes",
          },
        ],
        internalType: "struct TransferData",
        name: "data",
        type: "tuple",
      },
    ],
    name: "onTransferExecuted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50603780546001600160a01b031916331790556200002e62000158565b6200004063995a12c960e01b62000196565b620000526380c05c0360e01b62000196565b6200006463513618bb60e11b62000196565b6200007663a5de226f60e01b62000196565b60408051808201909152601681527f6973426c6f636b6c6973746564286164647265737329000000000000000000006020820152620000b59062000251565b60408051808201909152601b81527f6973426c6f636b6c697374656441646d696e28616464726573732900000000006020820152620000f49062000251565b620001066397ba028960e01b6200028d565b620001186373ada84760e11b6200028d565b6200012262000309565b62000146604051806060016040528060258152602001620017ff602591396200033b565b620001526001620003b2565b620006af565b60375460405162000179916001600160a01b0316906039906020016200055c565b60408051601f198184030181529190528051602090910120603a55565b303b15620001f15760405162461bcd60e51b815260206004820152602e60248201526000805160206200182483398151915260448201526d34329031b7b739ba393ab1ba37b960911b60648201526084015b60405180910390fd5b603480546001810182556000919091527f46bddb1178e94d7f2892ff5f366840eb658911794f2c3a44c450aa2c505186c16008820401805463ffffffff60079093166004026101000a928302191660e09390931c91909102919091179055565b6200028a816040516020016200026891906200061e565b604051602081830303815290604052805190602001206200019660201b60201c565b50565b303b15620002e45760405162461bcd60e51b815260206004820152602e60248201526000805160206200182483398151915260448201526d34329031b7b739ba393ab1ba37b960911b6064820152608401620001e8565b6001600160e01b0319166000908152603560205260409020805460ff19166001179055565b6200031560006200040e565b6200032160016200040e565b6200032d60026200040e565b6200033960036200040e565b565b303b15620003925760405162461bcd60e51b815260206004820152602e60248201526000805160206200182483398151915260448201526d34329031b7b739ba393ab1ba37b960911b6064820152608401620001e8565b8051620003a7906039906020840190620004b6565b506200028a62000158565b303b15620004095760405162461bcd60e51b815260206004820152602e60248201526000805160206200182483398151915260448201526d34329031b7b739ba393ab1ba37b960911b6064820152608401620001e8565b603855565b303b15620004655760405162461bcd60e51b815260206004820152602e60248201526000805160206200182483398151915260448201526d34329031b7b739ba393ab1ba37b960911b6064820152608401620001e8565b60016033600083600381111562000480576200048062000699565b600381111562000494576200049462000699565b81526020810191909152604001600020805460ff191691151591909117905550565b828054620004c4906200065c565b90600052602060002090601f016020900481019282620004e8576000855562000533565b82601f106200050357805160ff191683800117855562000533565b8280016001018555821562000533579182015b828111156200053357825182559160200191906001019062000516565b506200054192915062000545565b5090565b5b8082111562000541576000815560010162000546565b606083901b6001600160601b031916815281546000906014908290600181811c90828116806200058d57607f831692505b6020808410821415620005ae57634e487b7160e01b86526022600452602486fd5b818015620005c55760018114620005db576200060e565b60ff1986168a890152848a01880196506200060e565b60008b81526020902060005b86811015620006045781548c82018b0152908501908301620005e7565b505087858b010196505b50949a9950505050505050505050565b6000825160005b8181101562000641576020818601810151858301520162000625565b8181111562000651576000828501525b509190910192915050565b600181811c908216806200067157607f821691505b602082108114156200069357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b61114080620006bf6000396000f3fe6080604052600436106100f75760003560e01c8063995a12c91161008a578063ac4ab3fb11610059578063ac4ab3fb1461028f578063c6ba1b57146102af578063cd28fc8f146102cf578063e0e94397146102f157600080fd5b8063995a12c91461020d578063a26c31761461022d578063a5de226f1461024d578063a75a245a1461026d57600080fd5b806380c05c03116100c657806380c05c03146101865780638129fc1c146101a8578063866d2871146101bd5780638e204c43146101ed57600080fd5b806334328ef61461010357806335d94527146101275780633e2a50eb1461014957806354fd4d501461017157600080fd5b366100fe57005b600080fd5b34801561010f57600080fd5b50603a545b6040519081526020015b60405180910390f35b34801561013357600080fd5b5061013c610311565b60405161011e9190610fad565b34801561015557600080fd5b506037546040516001600160a01b03909116815260200161011e565b34801561017d57600080fd5b50603854610114565b34801561019257600080fd5b506101a66101a1366004610d81565b6103a3565b005b3480156101b457600080fd5b506101a6610468565b3480156101c957600080fd5b506101dd6101d8366004610de8565b610497565b604051901515815260200161011e565b3480156101f957600080fd5b506101dd610208366004610d81565b6104da565b34801561021957600080fd5b506101a6610228366004610d81565b6104fa565b34801561023957600080fd5b506101a6610248366004610d81565b6105b3565b34801561025957600080fd5b506101a6610268366004610d81565b61066c565b34801561027957600080fd5b50610282610725565b60405161011e9190610f6b565b34801561029b57600080fd5b506101dd6102aa366004610d9c565b6107a9565b3480156102bb57600080fd5b506101dd6102ca366004610e09565b6107bc565b3480156102db57600080fd5b506102e4610946565b60405161011e9190610f27565b3480156102fd57600080fd5b506101dd61030c366004610d81565b61099d565b6060603b805461032090611063565b80601f016020809104026020016040519081016040528092919081815260200182805461034c90611063565b80156103995780601f1061036e57610100808354040283529160200191610399565b820191906000526020600020905b81548152906001019060200180831161037c57829003601f168201915b5050505050905090565b3063e0e943976103b16109b7565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b1580156103f057600080fd5b505afa158015610404573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104289190610dc6565b61044d5760405162461bcd60e51b815260040161044490611002565b60405180910390fd5b610465816000805160206110eb833981519152610a0a565b50565b6104876104736109b7565b6000805160206110cb833981519152610a4e565b6104953063c6ba1b57610a92565b565b6000603360008360038111156104af576104af61109e565b60038111156104c0576104c061109e565b815260208101919091526040016000205460ff1692915050565b60006104f4826000805160206110eb8339815191526107a9565b92915050565b3063e0e943976105086109b7565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b15801561054757600080fd5b505afa15801561055b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057f9190610dc6565b61059b5760405162461bcd60e51b815260040161044490611002565b610465816000805160206110eb833981519152610a4e565b3063e0e943976105c16109b7565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b15801561060057600080fd5b505afa158015610614573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106389190610dc6565b6106545760405162461bcd60e51b815260040161044490611002565b610465816000805160206110cb833981519152610a4e565b3063e0e9439761067a6109b7565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b1580156106b957600080fd5b505afa1580156106cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f19190610dc6565b61070d5760405162461bcd60e51b815260040161044490611002565b610465816000805160206110cb833981519152610a0a565b6060603480548060200260200160405190810160405280929190818152602001828054801561039957602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116107625790505050505050905090565b60006107b58284610b5c565b9392505050565b60006107ef7f66ad66e3451c55c1997c7b22154c2a8caa66dbcc3a201482e1fc5e25434dd133546001600160a01b031690565b6001600160a01b0316336001600160a01b0316146108455760405162461bcd60e51b8152602060048201526013602482015272151bdad95b8e88155b985d5d1a1bdc9a5e9959606a1b6044820152606401610444565b60808201516001600160a01b0316156108c15761087482608001516000805160206110eb8339815191526107a9565b156108c15760405162461bcd60e51b815260206004820152601b60248201527f66726f6d206164647265737320697320626c6f636b6c697374656400000000006044820152606401610444565b60a08201516001600160a01b03161561093d576108f08260a001516000805160206110eb8339815191526107a9565b1561093d5760405162461bcd60e51b815260206004820152601960248201527f746f206164647265737320697320626c6f636b6c6973746564000000000000006044820152606401610444565b5060015b919050565b6060603680548060200260200160405190810160405280929190818152602001828054801561039957602002820191906000526020600020905b815481526020019060010190808311610980575050505050905090565b60006104f4826000805160206110cb8339815191526107a9565b6000601836108015906109f357507f66ad66e3451c55c1997c7b22154c2a8caa66dbcc3a201482e1fc5e25434dd135546001600160a01b031633145b15610a05575060131936013560601c90565b503390565b610a148183610bdf565b60405181906001600160a01b038416907f47808f9766351846ab3f47ddfd0cfc00fd1a4831674f2c872826932b0184d0be90600090a35050565b610a588183610c61565b60405181906001600160a01b038416907faa695d83684b95e18fda4eda7e1794787e74fbc90097a9582f5c41989687883e90600090a35050565b6000610ac57f66ad66e3451c55c1997c7b22154c2a8caa66dbcc3a201482e1fc5e25434dd133546001600160a01b031690565b604080516303d18fed60e51b81527fffa12f3235609338cae9786d834825f13134ceb8cead17698174270813895eac600482015263ffffffff8516602087901b1790911b60248201529091506001600160a01b03821690637a31fda090604401600060405180830381600087803b158015610b3f57600080fd5b505af1158015610b53573d6000803e3d6000fd5b50505050505050565b60006001600160a01b038216610bbf5760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b6064820152608401610444565b506001600160a01b03166000908152602091909152604090205460ff1690565b610be98282610b5c565b610c3f5760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b6064820152608401610444565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b610c6b8282610b5c565b15610cb85760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c65006044820152606401610444565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b80356001600160a01b038116811461094157600080fd5b600082601f830112610d0557600080fd5b813567ffffffffffffffff80821115610d2057610d206110b4565b604051601f8301601f19908116603f01168101908282118183101715610d4857610d486110b4565b81604052838152866020858801011115610d6157600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215610d9357600080fd5b6107b582610cdd565b60008060408385031215610daf57600080fd5b610db883610cdd565b946020939093013593505050565b600060208284031215610dd857600080fd5b815180151581146107b557600080fd5b600060208284031215610dfa57600080fd5b8135600481106107b557600080fd5b600060208284031215610e1b57600080fd5b813567ffffffffffffffff80821115610e3357600080fd5b908301906101408286031215610e4857600080fd5b610e50611039565b610e5983610cdd565b8152602083013582811115610e6d57600080fd5b610e7987828601610cf4565b60208301525060408301356040820152610e9560608401610cdd565b6060820152610ea660808401610cdd565b6080820152610eb760a08401610cdd565b60a082015260c083013560c082015260e083013560e08201526101008084013583811115610ee457600080fd5b610ef088828701610cf4565b8284015250506101208084013583811115610f0a57600080fd5b610f1688828701610cf4565b918301919091525095945050505050565b6020808252825182820181905260009190848201906040850190845b81811015610f5f57835183529284019291840191600101610f43565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015610f5f5783516001600160e01b03191683529284019291840191600101610f87565b600060208083528351808285015260005b81811015610fda57858101830151858201604001528201610fbe565b81811115610fec576000604083870101525b50601f01601f1916929092016040019392505050565b60208082526017908201527f4e6f74206f6e20626c6f636b206c6973742061646d696e000000000000000000604082015260600190565b604051610140810167ffffffffffffffff8111828210171561105d5761105d6110b4565b60405290565b600181811c9082168061107757607f821691505b6020821081141561109857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fdfe6ca0485b3f9b82cefbeab7128ad27a9a26f90138b746702f030b1b4de706032861f7932b12cb4709c38f1453e5681a2afb0f50d2425e65202a6d67f07292409fa2646970667358221220b6e689fec7ea3de26faaabbab58456ce28a6b6bb10d8e051239e38849ef3688364736f6c634300080700336e65742e636f6e73656e7379732e746f6b656e6578742e426c6f636b457874656e73696f6e46756e6374696f6e206d7573742062652063616c6c656420696e736964652074";

type BlockExtensionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlockExtensionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlockExtension__factory extends ContractFactory {
  constructor(...args: BlockExtensionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BlockExtension> {
    return super.deploy(overrides || {}) as Promise<BlockExtension>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BlockExtension {
    return super.attach(address) as BlockExtension;
  }
  override connect(signer: Signer): BlockExtension__factory {
    return super.connect(signer) as BlockExtension__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockExtensionInterface {
    return new utils.Interface(_abi) as BlockExtensionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BlockExtension {
    return new Contract(address, _abi, signerOrProvider) as BlockExtension;
  }
}
