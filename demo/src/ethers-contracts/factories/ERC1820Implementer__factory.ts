/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ERC1820Implementer,
  ERC1820ImplementerInterface,
} from "../ERC1820Implementer";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "interfaceHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "canImplementInterfaceForAddress",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610173806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063249cb3fa14610030575b600080fd5b61004361003e366004610101565b610055565b60405190815260200160405180910390f35b6001600160a01b03811660009081526020818152604080832085845290915281205460ff16806100b2575060008381527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604090205460ff165b156100f75760405173455243313832305f4143434550545f4d4147494360601b60208201526034016040516020818303038152906040528051906020012090506100fb565b5060005b92915050565b6000806040838503121561011457600080fd5b8235915060208301356001600160a01b038116811461013257600080fd5b80915050925092905056fea264697066735822122036954c0c22f772706c255ecba3c5b5e119fa350e2847352ce7fb57818232319264736f6c63430008070033";

type ERC1820ImplementerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1820ImplementerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1820Implementer__factory extends ContractFactory {
  constructor(...args: ERC1820ImplementerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1820Implementer> {
    return super.deploy(overrides || {}) as Promise<ERC1820Implementer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1820Implementer {
    return super.attach(address) as ERC1820Implementer;
  }
  override connect(signer: Signer): ERC1820Implementer__factory {
    return super.connect(signer) as ERC1820Implementer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1820ImplementerInterface {
    return new utils.Interface(_abi) as ERC1820ImplementerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1820Implementer {
    return new Contract(address, _abi, signerOrProvider) as ERC1820Implementer;
  }
}
